<HTML>

<HEAD>

<TITLE>lordthu1.htm: VRAMDIR - VXDennis the menace</TITLE>

</HEAD>

<BODY BGCOLOR="#C0C0C0" TEXT="#001010" VLINK="#405040">

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="22" WIDTH="100%">

<TR><TD></TD>

<TD>

<!-- Choose  a TITLE probably wont be changed -->

<CENTER><FONT SIZE="+2">VXDennis the menace</FONT><BR>

        <FONT SIZE="+1">Fun with VRAMDIR v1.07</FONT>

</CENTER>

</TD>

<TD>

<!-- Choose  a PROJECT GIF may be changed -->

<CENTER><A href="ourtools.htm" tppabs="http://www.anticrack.de/fravia/ourtools.htm"><IMG SRC="ourtools.gif" tppabs="http://www.anticrack.de/fravia/ourtools.gif" ALT="our tools"

ALIGN="CENTER" WIDTH="114" HEIGHT="43" BORDER="0" VSPACE="0" HSPACE="0"></A>

<BR>

<FONT color="gray">Our tools</FONT>

</CENTER></TD></TR>

<TR>

<TD bgcolor="#FFFFEA"><CENTER>

<FONT COLOR="890000">

1 February 1998

</FONT></CENTER>

</TD>

<TD bgcolor="#FFFFEA"><CENTER>

by 

<FONT size="+3">

CoreFixar

</FONT>aka ThunderLord</CENTER>

</TD>

<TD VALIGN="center" bgcolor="#FFFFEA"><!--

<a href="hcu98_3.htm" tppabs="http://www.anticrack.de/fravia/hcu98_3.htm"><img SRC="hcu1.gif" tppabs="http://www.anticrack.de/fravia/hcu1.gif" ALT="+cracker" ALIGN="BOTTOM" WIDTH="114"

HEIGHT="43" BORDER="0" VSPACE="0" HSPACE="0"></a> --></TD>

</TR>

<TR><TD><CENTER><A href="index.html" tppabs="http://www.anticrack.de/fravia/index.html">

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13"

HEIGHT="13"></A></CENTER></TD>

<TD BGCOLOR="898030"><CENTER>Courtesy of Fravia's page of 

reverse engineering</CENTER> 

</CENTER></TD>

<TD BGCOLOR="898030"><PRE> </PRE></TD>

</TR>

<TR><TD></TD><TD><I><CENTER>

Well ThunderLord's advice is correct. And it is a very good idea: we are (supposed to be) 

master crackers, so there is no point, for us, in producing keygenerators for the 

zombies, or to diffuse 

already regged proggies on the web for all lusers and idiots to leech and steal. We 

have A LOT more to study and to learn on our own steil road to wizardry. 

So if we find, like here, a program written by a VXD 

guru, let's get this guy with us, let's have him working <U>with us</U> on 

our own tools, and let's NOT ruin his 

application making it available for everybody. Thunderlord's point is a very good one: 

work on this target 

(we'll do it all -of course- because we need these techniques ourselves) but keep this 

target safe from the lusers. Let's hope that the guy who wrote it will give us some 

teachings or help in exchange... if he does we'll offer him a ready made solide 

protection for his app, like a binary bit-calculated password or something even more 

strong :-) so that his app will be (in the next version) safe from lamers.

</I></CENTER></TD>

<TD></TD>

</TR>

<TR><TD></TD>

<TD BGCOLOR="898030"><CENTER></I><B>There is a crack, a crack in everything 

That's how the light gets in</B></CENTER>

</CENTER></TD><TD></TD>

</TR>

<TR>

<TD VALIGN="MIDDLE" bgcolor="#C6E7C6"><FONT color="blue"><CENTER>

Rating</FONT></FONT></CENTER>

</TD>

<TD VALIGN="MIDDLE" bgcolor="#C6E7C6"><FONT color="blue"><CENTER>

<!-- CHOOSE A RATING (may be changed) -->

(x)<B>Beginner</B> (x)<B>Intermediate</B> ( )<B>Advanced</B> ( )<B>Expert</B></FONT>



</CENTER></TD>

<TD></TD>

</TR>

</TABLE>

<!-- CORPUS  -->

<BR>



<!-- CHOOSE A COMMENT (may be changed)  -->

An essay for intermediate reversers, who can learn an interesting time activated

nag-protection which is implemented as a VXD. Plus, some nice info about the VXD

execution flow and other stuff. Advanced readers can fully reverse other parts of

the application (which is also reccomended for the beginners) to learn some nice

snippets and tricks.

<HR>

<CENTER>

   <FONT SIZE="+2">

<!-- CHOOSE A TITLE (wont proabbly be changed) -->

VXDennis the menace

   </FONT><BR>

   <FONT SIZE="+2">

<!-- CHOOSE A SUBTITLE (wont proabbly be changed) -->

Fun with VRAMDIR v1.07

   </FONT><BR>

   <FONT COLOR="0B7FC1">

<!-- REPEAT YOUR CHOSEN HANDLE HERE -->

Written by CoreFixar aka ThunderLord

   </FONT>

</CENTER>

<!-- INTRODUCTION STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Introduction</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>



<PRE>

<!-- PASTE HERE YOUR INTRODUCTION -->

<BR>I first met VRAMDRIVE when I tryed using Micro$oft's own RAMDRIVE.SYS, which

as always had <BR>troubles in it, like: "Invalid DOS version and stuff...". So I

searched the web for some new <BR>RAM drive replacer and found this wonderfull tool.



<BR>It is especially usefull if you are working to much with many files, like the

archives you <BR>download from the web to check out, and you don't want to strain

your harddrive. At the same <BR>time you are getting higher perfomance and less fragmentation

:) So I hope I made my point <BR>about the usage of this program, so let's take a

closer look at it...

<BR>The first interesting thing is that there is no installation program, just a

simple <BR>batchfile, which copies some registry updating files and merges them into

the registry. <BR>That's good, cause there is no "hidden" installation going on...

only the things needed :)

<BR>This application consists of two main files: the control panel applet and the

VXD driver. <BR>The control panel applet is very simple and is only used for adding/deleting

the RAM <BR>folders. There is even no nag in it. The other thingie is much more advanced:

a virtual file <BR>system hooking VXD, which mapps the content of the directories

into the memory and this way <BR>it speeds up the disk access. The most wonderfull

thing is that it resizes the used memory <BR>according to the directory emptyness...Well

other perfomance stats can be read in the README <BR>file supplied with application.



<BR>The only nasty thing is that this is a demo, and it unloads itself from the memory

in 30 <BR>minutes, writing all the virtual files to disk. So unless you want to boot

ya machine at <BR>1/1800 Hz (remember this number - "once every 1800 seconds, or

1800000 miliseconds" :) , <BR>you'll need it to reverse this program.

</PRE>



<!-- TOOLS REQUIRED STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Tools required</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>



<!-- PASTE HERE YOUR REQUIRED TOOLS -->

<BR>IDA v6.7 or higher (because WDASM chokes on the VXD)

<BR>YaHexEditor vX.X (to patch the file)

<BR><BR>WinIce 3.0 or higher (Just for curious look at the internal workings of the

VXD)

<!-- TARGET URL/FTP STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Target's URL/FTP</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>



<!-- DON'T FORGET TO PASTE HERE ALSO THE URL/FTP OF YOUR TARGET -->

<BR>The target can be widely found on almost all shareware bots, like WWW.SHAREWARE.COM,

<BR>WWW.JUMBO.COM and others...

<BR>Just search for VIRTUAL RAMDRIVE, RAMDRIVE, RAMDIR... you've got the idea



<!-- PROGRAM HISTORY STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Program History</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>

<!-- PASTE HERE YOUR TARGET'S HISTORY (if any) -->

<BR>Probably a very young program, because of it's small version number - 1.07, therfor

please <BR>don't make any lame patchers for those lamers on the web, because the

programmer would be <BR>blown through the chimney. You'd better contact him and share

your information with his <BR>black whizdom of VXD writing.

<BR>Because the programmer who wrote this app is definitly a guru at VXD programming,

but he sux <BR>at protecting it. His code runs at ring0 and he doesn't even encrypt

the nag string !!!



<!-- REAL ESSAY CORPUS STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Essay</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>

<!-- PASTE HERE THE TEXT OF YOUR ESSAY     THIS IS OF COURSE THE MOST IMPORTANT PART

    PLEASE CHECK THE MARGINS! SHOULD NOT BLAST     NETSCAPE MARGINS OUT! HAVE A LOOK

INSIDE     YOUR OWN BROWSER WHEN YOU HAVE FINISHED!  -->

<PRE>

<BR>At first let me say that there would be used no live debugging at all. This can

be explained <BR>with the fact, that WinIce loads itself as a VXD, therfor it can't

debug other drivers at <BR>the boot time (correct me if I am wrong, but I tryed and

failed). Therefor we'll only be <BR>using the deadlist approach which I learned from

+ORC's tutorials from +fravia's site :)

<BR>Try loading the vxd in the wdasm - you'll get some garbage without any x-refs

and even <BR>without the entry point !!! So I loaded it into my trusty ida (Grrrr...)

Which unassembled <BR>it pretty good. Many procedures were left as undiscovered,

so it is recommended to mark them <BR>manually. (Use the "C" to mark as Code, and

then as a "P" for procedure).

<BR>When I first saw the deadlisting I was astonished how nice it was. I mean all

instructions <BR>are very clear and all intentions seem throw. It is a perfekt vxd

learning material, the <BR>only thing is the size of the asmfile - about 260 kb,

which is too much to comment and see <BR>through in one day. So I started to browse

through all procedures, and almost forgot that I <BR>was looking for the protection

sheme. Then I had to interrupt myself and to continue the <BR>standart "Register..."

search :)

<BR>But now I know what I'd do on my school holidays - A nice garden chair, 2 liters

of herbtea, <BR>and 200 pages of vramdir asmcode to enjoy...

<BR>Suddenly I saw this:

<BR>

<BR>aThisIsTheTrial	db 'This is the trial version of VRAMDIR. The 30-minute trial

period has<BR> '

<BR>		db 'expired.',0Ah

<BR>		db 'From now on files will be written to disk. You',27h,'ll get another '

<BR>		db '30-minute the next time Windows starts.',0Ah

<BR>		db 'See README.TXT for information on how to get a registered copy.',0

<BR>

<BR>This is easyer than it could have been. The following is just a standart "How

I cracked that <BR>proggy" stuff:

<BR>I checked the reference where this string points to:

<BR>

<BR>;here is the proc which snaps both message and then disables the virtual effect

of a folder

<BR>SubTheNag	proc near		; DATA XREF: SubMainEngine+483o

<BR>		xor	eax, eax

<BR>		push	eax               <SERIES of NULL pushes for the following call

<BR>		mov	ds:hTimeOutReturn, eax <ERASES the handle to 30 minute timer

<BR>		push	eax

<BR>		push	offset aThisIsTheTrial <MESSAGE to show

<BR>		push	offset SubShowNagMsg <SUB to continue on, after the VXDJumpCall

<BR>		call	SubVJAtAppTime <COMBINATION of the call and VXDJumpCall

<BR>		mov	ds:fNagOccuredFlag, 1 <BOOL Flag which indicates if the program

<BR>		add	esp, 10h              should begin writing virtual files to disk

<BR>		retn	

<BR>SubTheNag	endp

<BR>

<BR>;this proc is called by the SubTheNag, and it illustrates how VXD's use their

vxdAPI <BR>functions

<BR>SubVJAtAppTime	proc near		; CODE XREF: SubTheNag+13p

<BR>		VxDjmp _SHELL_CallAtAppyTime

<BR>SubVJAtAppTime	endp

<BR>;After the jump, it returns to previously pushed location, in our case SubShowNagScreen



<BR>; we even prepared the offsets for it in the SubTheNag

<BR>

<BR>;this proc is returned to after disabling the ramfolder and it shows a message



<BR>SubShowNagMsg	proc near		; DATA XREF: SubTheNag+Eo

<BR>		push	ebp

<BR>		mov	ebp, esp      <STACK Frame, DUH

<BR>		push	offset aVramdir <A string "VRAMDIR"

<BR>		push	dword ptr [ebp+8] <2 Params for the next call

<BR>		push	10001000h

<BR>		call	SubVGetCurVMhan <AGAIN that funny call and jump iside the proc

<BR>		push	eax

<BR>		call	SubVSysModMsg <!!! SysModalMessage to show the nag

<BR>		pop	ebp

<BR>		retn	

<BR>SubShowNagMsg	endp

<BR>

<BR>; 2 jumpprocs called in the abouve proc

<BR>SubVGetCurVMhan	proc near		; CODE XREF: SubShowNagMsg+10p

<BR>		push	ebp

<BR>		mov	ebp, esp

<BR>		push	ebx

<BR>		VMMcall	Get_Cur_VM_Handle

<BR>		mov	eax, ebx

<BR>		pop	ebx

<BR>		pop	ebp

<BR>		retn	

<BR>SubVGetCurVMhan	endp

<BR>SubVSysModMsg	proc near		; CODE XREF: SubShowNagMsg+16p

<BR>		push	ebp

<BR>		mov	ebp, esp

<BR>		push	ebx

<BR>		push	edi

<BR>		mov	ebx, [ebp+8]

<BR>		mov	eax, [ebp+0Ch]

<BR>		or	eax, 1000h

<BR>		mov	ecx, [ebp+10h]

<BR>		mov	edi, [ebp+14h]

<BR>		VxDcall	SHELL_SYSMODAL_Message

<BR>		pop	edi

<BR>		pop	ebx

<BR>		pop	ebp

<BR>		retn	10h

<BR>SubVSysModMsg	endp

<BR>; The interesting thing is the use of the SHELL_SYSMODAL_Message to show the

nagbox. This <BR>type of messages is only used, when you write directly to the harddrive

and other critical <BR>stuff... 

<BR>

<BR>Ok we've seen the nag showing routines, and the program-effect deactivation routines

(I mean <BR>the one where it disables it's virtual ramdrive effekt by setting a flag).

If you want, you <BR>can see where in other parts of the program this flag is used,

and you'll see, that it is <BR>only used in a CMP,JNE instructions.

<BR>But what about the priming routine, which activates the whole avalanche... Well

after a <BR>little more browsing around the code, I saw a very big and strange number:

1B7740 beeing <BR>pushed on the stack. I tryed setting is as an offset but it responded

with a BEEP :) I tryed <BR>setting is as a relative offset... BEEP. (I am describing

the wonderfull capabilities of <BR>IDA). At last I pressed H to change the numberbase,

and I got... 1800000.  Then it struck me <BR>1800000 msec = 1800 sec = 30 min !!!

Well, here comes the code:

<BR>

<BR>loc_20633:				; CODE XREF: SubMainEngine+45Fj

<BR>		xor	esi, esi

<BR>		call	sub_20868 <SOME crappy stuff

<BR>		mov	eax, ds:dword_784

<BR>		push	esi		; param	ofs: 18h <NULL as a param

<BR>		push	offset SubTheNag ; param ofs: 14h <SUB to return to after the call



<BR>		mov	ds:dword_788, eax <SOME more crap, need mo tea

<BR>		push	esi		; param	ofs: 0Ch <ANOTHER NULL as param

<BR>		push	1800000		; param	ofs: 08h <30 min, AHHHH !

<BR>		call	sub_20B84	; call ofs: 04h <CALLS a sub and installs a systimer

<BR>		mov	ds:hTimeOutReturn, eax <SAVES it's handle

<BR>		cmp	eax, esi <CHECK if successfull

<BR>		mov	eax, 1Fh <SOME param for the next proc

<BR>		jz	short lExitTheSub <IF error on systimer, then bail out

<BR>		push	0		; stack	ofs: 0Ch <MORE crappy params

<BR>		push	offset sub_1100E ; stack ofs: 08h <SUB to continue execution on

<BR>		call	sub_20B54	; stack	ofs: 04h <AFTER this Nice guy sub

<BR>		xor	eax, eax

<BR>

<BR>lExitTheSub:				; CODE XREF: SubMainEngine+24j	<BR>SubMainEngine+47j

<BR>;As you can see here it uses that strange technique again: pushing the offset

of another sub <BR>to return to, instead of a normal jump. 8-}

<BR>

<BR>;here is the sub which calls another one to instal a system timer

<BR>sub_20B84	proc near		; CODE XREF: SubMainEngine+493p

<BR>		push	ebp		; stack	ofs: 00h

<BR>		mov	ebp, esp

<BR>		push	esi

<BR>		mov	esi, [ebp+14h] <SOME crap for the sub which handles some local vars



<BR>		mov	eax, [ebp+10h]

<BR>		mov	edx, offset word_1AB4

<BR>		push	offset sub_20BA2 <PUSH'n'continue technique

<BR>; there has just been pushed offset of the sub which instals the timer. It would

be executed <BR>after the following jump to a proc returns.

<BR>		jmp	ds:off_20B9E <JUMP to a strange local variable handling sub

<BR>sub_20B84	endp

<BR>

<BR>;timer installation procedure

<BR>sub_20BA2	proc near		; DATA XREF: sub_20B84+Fo

<BR>		mov	eax, [ebp+8]	; timeout in msec (18000000)

<BR>		mov	edx, [ebp+0Ch]	; null

<BR>		VMMcall	Set_Global_Time_Out

<BR>		mov	eax, esi

<BR>		pop	esi

<BR>		pop	ebp

<BR>		retn	10h

<BR>sub_20BA2	endp

<BR>;the previous proc loads the registers from the stack and sets a system timer,

which returns <BR>a timer handle in the ESI. Which is fast loaded into the EAX and

returned to the first <BR>listing higher up on the page.

<BR>That way is the protection sheme reversed, just like any ordinary win proggy.



<BR>(actually we were lucky that the programmer didn't use some crazy encryption

and stuff, <BR>cause vxd's run at the ring 0, where everything is allowed !



</PRE>



<!-- FINAL NOTES STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Final Notes</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>

<!-- PASTE HERE YOUR FINAL NOTES (if any) -->

<PRE>

<BR>I leave the actual patching for you. There can be done several patches, try patching

<BR>everything in one place :) I myself patched it in two places.

<BR>HINT 1: That system timer installation is quite unnessesary in our purpose...



<BR>HINT 2: It must also return a valid handle from the Set_Global_Time_Out, probably

not NULL <BR>;)

<BR>

<BR>PS: Where to find some documentation about those vxdcalls ? This can be an interesting

<BR>project for +HCU. ("Reversing the secrets of vxdapi")

<BR>

<BR>The fully disassembled and partly commented by me deadlisting can be downloaded

from <A href="javascript:if(confirm('http://www.geocities.com/ResearchTriangle/7060/vramdir.arj  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.geocities.com/ResearchTriangle/7060/vramdir.arj'" tppabs="http://www.geocities.com/ResearchTriangle/7060/vramdir.arj">here</A>.







</PRE>



<!-- OB DUH STARTS HERE -->

<BR><BR>

<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" HEIGHT="45" WIDTH="100%">

<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size="+2"><FONT color="blue">Ob Duh</FONT></FONT></CENTER><BR>



</TD></TR></TABLE>

 <CENTER>

   <I>I WILL bother explaining you 

   that you should BUY this target program if you intend to use it for a longer 



   period than the allowed one. Should you want 

   to STEAL this software instead, you are a moron. This is the kind 

of software that WE NEED. Many people should register it and allow its 

Author to write even more interesting stuff!</I>

</CENTER>



<!-- WAY OUT STARTS HERE -->

<HR>

<CENTER><I>You are deep inside fravia's page of reverse engineering,  

choose your way out:</I></CENTER>

<BR><CENTER>

<CENTER><A href="ourtools.htm" tppabs="http://www.anticrack.de/fravia/ourtools.htm"><IMG SRC="ourtools.gif" tppabs="http://www.anticrack.de/fravia/ourtools.gif" ALT="our tools"

ALIGN="CENTER" WIDTH="114" HEIGHT="43" BORDER="0" VSPACE="0" HSPACE="0"></A>

<BR>

<FONT color="gray">Our tools</FONT>

</CENTER>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="index.html" tppabs="http://www.anticrack.de/fravia/index.html">homepage</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="links.htm" tppabs="http://www.anticrack.de/fravia/links.htm">links</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm">anonymity</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13"

HEIGHT="13"><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="student.htm" tppabs="http://www.anticrack.de/fravia/student.htm">students' essays</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy database</A>

<BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="javascri.htm" tppabs="http://www.anticrack.de/fravia/javascri.htm">Javascript wars</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut CGI-scripts</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia+</A>

<BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0"

VSPACE="0" HSPACE="0"><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">Is reverse engineering legal?</A>

</CENTER>

<HR>



</BODY>

</HTML>









Free web-based email, Forever, From anywhere!

http://www.mailexcite.com