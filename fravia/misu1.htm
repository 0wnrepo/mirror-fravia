<HTML>

<HEAD>

   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">

   <META NAME="GENERATOR" CONTENT="Mozilla/4.05 [en] (Win95; I) [Netscape]">

   <TITLE>misu1.htm: The PicaView KeyGenerator</TITLE>

</HEAD>

<BODY TEXT="#001010" BGCOLOR="#C0C0C0" VLINK="#405040">

&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" 22" >

<CAPTION><!-- this is for the data.....fra_00xx....yymmdd....handle..beg+int...not ass... --></CAPTION>



<TR>

<TD></TD>



<TD>

<CENTER><FONT SIZE=+2>The PicaView32 KeyGenerator</FONT></CENTER>



<CENTER><FONT SIZE=+1>(creating KeyGenerators instead of lame patches)</FONT></CENTER>

</TD>



<TD><!-- Choose  a PROJECT GIF, leave this if unsure -->

<CENTER><A HREF="student.htm#student_loo_na" tppabs="http://www.anticrack.de/fravia/student.htm#student_loo_na"><IMG SRC="notassi3.gif" tppabs="http://www.anticrack.de/fravia/notassi3.gif" ALT="student" BORDER=0 HEIGHT=43 WIDTH=114 ALIGN=CENTER></A>&nbsp;</CENTER>



<CENTER><FONT COLOR="#808080">Not Assigned</FONT>&nbsp;</CENTER>

</TD>

</TR>



<TR>

<TD BGCOLOR="#FFFFEA">

<CENTER><FONT COLOR="#890000">05 June 1998</FONT></CENTER>

</TD>



<TD BGCOLOR="#FFFFEA">

<CENTER>by <FONT SIZE=+3>+mISu&nbsp;</FONT></CENTER>

</TD>



<TD VALIGN=CENTER BGCOLOR="#FFFFEA"><!--



<a href="hcu98_3.htm" tppabs="http://www.anticrack.de/fravia/hcu98_3.htm"><IMG SRC="hcu1.gif" tppabs="http://www.anticrack.de/fravia/hcu1.gif" ALT="+cracker" ALIGN=BOTTOM 



WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a>



--></TD>

</TR>



<TR>

<TD>

<CENTER><A HREF="javascript:if(confirm('http://www.anticrack.de/fravia/index-1.htm  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://www.anticrack.de/fravia/index-1.htm'" tppabs="http://www.anticrack.de/fravia/index-1.htm"><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" BORDER=0 ALIGN=BOTTOM width="13" height="13"></A></CENTER>

</TD>



<TD BGCOLOR="#898030">

<CENTER>Courtesy of Fravia's page of reverse engineering</CENTER>

</TD>



<TD BGCOLOR="#898030">

<CENTER><!-- Your truly+ will edit only if really necessary -->slightly

edited</CENTER>



<CENTER>by fravia+</CENTER>

</TD>

</TR>



<TR>

<TD><FONT COLOR="#C4C0CF">fra_00xx</FONT>&nbsp;

<BR><FONT COLOR="#C4C0CF">980605</FONT>&nbsp;

<BR><FONT COLOR="#C4C0CF">+mISu</FONT>&nbsp;

<BR><FONT COLOR="#C4C0CF">0100</FONT>&nbsp;

<BR><FONT COLOR="#C4C0CF">NA</FONT>&nbsp;

<BR><FONT COLOR="#C4C0CF">PC</FONT></TD>



<TD>

<CENTER><!-- Your truly+ comments --><I>Well, +mISu writes that 

<font color=purple>writing a small C/C++ program is better than giving lamer

patches that don't find the program's dir, and patch in other part that it should, etc, etc.</font> and this 

is surely true. Yet I don't agree about his statement "<font color=purple>keymaker 

is the future of cracking, patches are dead by now</FONT>", because 

in fact, there are TWO sort of patches: patches that are made by lamers, for lamers, 

in order to 

automatically register a shareware program -why? Either you know how to crack it, or you learn how 

to crack it, why should people that don't care to understand nothing at all -with few exceptions (third world universities, Micro$oft targets, etc.)- 

enjoy software for free?- anyway: about <U>this</U> kind of patches I agree with +mISu! Yet there is a SECOND 

type of patches: patches that YOU make for YOURSELF in order to check a protection scheme, 

or ameliorate a target, or experiment a bit with alien code you don't happen to have the source code 

of... and THESE patches, far from being lame, are often EXTREMELY interesting, from our 

point of view... in fact the first kind of really lame patches can be coupled with 

the "lame 

keymaker little programs": programs that have been made, purposely, with the sole intent of 

providing absolute zombies with free warez (why? Either they know how to crack them, 

or they should learn how 

to crack them... 

why should people that don't understand nothing at all -with few exceptions (third world universities, Micro$oft targets, etc.)- 

enjoy shareware 

programs for free?). So it's <FONT color=blue><U>the purpose</U></FONT> of your patch or of your keygen, not the technique per se, 

IMHO, that decides if it's a lame product or a correct approach.</I><HR width=44%>This said, 

here you have an important essay whose purpose is "simply" to teach KNOWLEDGE,

 written by +mISu (a 

good reverser who has been contacted by +ORC himself) for all intermediate C++ buffs... Enjoy!</CENTER>

</TD>



<TD></TD>

</TR>



<TR>





<TD><!-- Leonard Coehn's old song, because we are poets, not only crackers --></TD>



<TD BGCOLOR="#898030">

<CENTER><B>There is a crack, a crack in everything That's how the light

gets in</B></CENTER>

<!-- Leonard Coehn's old song, because we are poets, not only crackers --></TD>



<TD></TD>

</TR>



<TR>

<TD VALIGN=CENTER BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF">Rating</FONT></CENTER>

</TD>



<TD VALIGN=CENTER BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF">( )<B>Beginner</B> (x)<B>Intermediate</B>

( )<B>Advanced</B> ( )<B>Expert</B></FONT>&nbsp;</CENTER>

</TD>



<TD></TD>

</TR>

</TABLE>

Creating keymakers is the future of cracking, patches are dead by now.&nbsp;

<HR>

<CENTER><FONT SIZE=+2>The PicaView32 KeyGenerator</FONT></CENTER>



<CENTER><FONT SIZE=+1>(creating KeyGenerators instead of lame patches)</FONT></CENTER>



<CENTER><FONT COLOR="#0B7FC1">Written by +mISu</FONT></CENTER>

&nbsp;

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT SIZE=+2><FONT COLOR="#0000FF">Introduction</FONT>&nbsp;</FONT></CENTER>

</TD>

</TR>

</TABLE>

<FONT FACE="Times New Roman,Times">PicaView is a fine picture viewer, plugin

for Explorer, with a serial number and 30-days protection. Here I will

crack the serial number protection, but I won't show you how to make a

patch, coz if you can read here this essay you surely could crack it yourself very

well.</FONT>

<BR><FONT FACE="Times New Roman,Times">Also I will show you how to make

a keymaker Ò that's the hard cracking part. Reversing the whole encoding

algorithm and building a keymaker leaving unmodified the target program.</FONT>

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT SIZE=+2><FONT COLOR="#0000FF">Tools required</FONT>&nbsp;</FONT></CENTER>

</TD>

</TR>

</TABLE>

For this cracking session you'll need the following:<BR>

<B>PicaView32 1.21</B>:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Download it from ACDSystems site: 

                       <A HREF="javascript:if(confirm('http://www.acdsystems.com/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.acdsystems.com/'" tppabs="http://www.acdsystems.com/">http://www.acdsystems.com/</A><BR>

<B>Soft-Ice for Window$95</B>:&nbsp;&nbsp;&nbsp; You'll find it almost everywhere on the web (but on this site)<BR>

<B>W32Dasm 8.9 regged</B>:&nbsp;&nbsp;&nbsp;     You'll find it almost everywhere on the web (but on this site)<BR>

or <B>IDA Pro 3.75</B>:&nbsp;&nbsp;&nbsp;      You'll find it almost everywhere on the web (but on this site)<BR>

<B>C/C++ compiler</B>:&nbsp;&nbsp;&nbsp;         You must have one around there, The complete Borland 4,5 suite<BR>

                        (with BRW!) has been published by a lot of mags lately<BR>

<B>Brains</B>:&nbsp;&nbsp;&nbsp;                 Don't know where you can get this<BR>



<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>Pinpointing the code</FONT></FONT>&nbsp;</CENTER>

</TD>

</TR>

</TABLE>

&nbsp;Detecting the location where the whole reading/encoding/comparing

is the most important thing in cracking, if you pinpointed the code, you

can consider your cracking is done. In our case, the pinpointing is made

by following our registration window's messages.

<BR>Press the right mouse button on a bitmap in explorer and select from

the menu Register÷ Fire Winice and do a 'hwnd explorer'. You'll see something

like this:



<P><FONT FACE="Courier"><FONT SIZE=-1>:hwnd explorer</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>Window Handle&nbsp;&nbsp;

hQueue&nbsp; SZ&nbsp; QOwner&nbsp;&nbsp;&nbsp; Class&nbsp; Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

Window Procedure</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">&nbsp;0538(1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

0F77&nbsp;&nbsp;&nbsp; 32&nbsp; EXPLORER&nbsp; #32770 (Dialog)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

1777:00004757&nbsp; </FONT>;this is our window</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp; 053C(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

0F77&nbsp;&nbsp;&nbsp; 32&nbsp; EXPLORER&nbsp; Button&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

1777:0000102E</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp; 0540(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

0F77&nbsp;&nbsp;&nbsp; 32&nbsp; EXPLORER&nbsp; Static&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

1777:000052FA</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">&nbsp; 0544(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

0F77&nbsp;&nbsp;&nbsp; 32&nbsp; EXPLORER&nbsp; Edit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

1777:00000BF4&nbsp; </FONT>;this is an edit field</FONT>



<P>Okay, let's trap messages referring to text reading from this window:

'bmsg 544 wm_gettext'. Enter a name and a registration code and press OK.

Boom! we land in some kernel/gdi functions, but after a few F12's (p ret)

we find the following piece of code:



<P><FONT FACE="Courier"><FONT SIZE=-1>:1000445A 8B3594F70710&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov esi, dword ptr GetDlgItemTextA</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10004460 8D4C241C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

lea ecx, dword ptr [esp+1C]&nbsp;&nbsp; </FONT>;push the address for username</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004464 6A1F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 0000001F</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004466 51&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push ecx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004467 68C8000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 000000C8</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:1000446C 57&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push edi</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:1000446D FFD6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call esi&nbsp;&nbsp; </FONT>;call GetDlgItemTextA</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:1000446F 8D542460&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

lea edx, dword ptr [esp+60]&nbsp;&nbsp; </FONT>;push the address for code</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004473 68C9000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 000000C9</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004478 52&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push edx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004479 68C9000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 000000C9</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:1000447E 57&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push edi</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:1000447F FFD6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call esi&nbsp;&nbsp; </FONT>;call GetDlgItemTextA</FONT>



<P>This is a classic routine for reading username and code. The username

is at [esp+1c] and the code at [esp+60]. Now we'll se how are manipulated

these two string and get compared.

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>The username string filtering</FONT></FONT></CENTER>

</TD>

</TR>

</TABLE>

Usually the username string is filtered a little, i.e. the characters that

are not letters or spaces are removed. PicaView is filtering the username

string as follows:



<P><FONT SIZE=-1><FONT FACE="Courier">:10004491 0FBE06&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

movsx eax, byte ptr [esi] </FONT>;at [esi] is the username string</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10004494 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push eax</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10004495 E8F6AA0400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 1004EF90&nbsp;&nbsp;</FONT> ;convert the character in eax to uppercase</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:1000449A 83C404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 00000004</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:1000449D 3C41&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp al, 41</FONT>&nbsp; ;'A'</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:1000449F 7C04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jl 100044A5</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:100044A1 3C5A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp al, 5A&nbsp;</FONT> ;'Z'</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044A3 7E04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jle 100044A9</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:100044A5 3C20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp al, 20&nbsp;</FONT> ;' '</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044A7 7505&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jne 100044AE</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:100044A9 8A0E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov cl, byte ptr [esi]&nbsp;&nbsp; </FONT>;esi points to unfiltered string

char</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:100044AB 880B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov byte ptr [ebx], cl&nbsp;</FONT>&nbsp; ;ebx points to filtered string

char</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044AD 43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

inc ebx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044AE 8A4601&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov al, byte ptr [esi+01]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044B1 46&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

inc esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044B2 84C0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

test al, al</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:100044B4 75DB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jne 10004491</FONT></FONT>



<P>For example, if the string is '+mISu '98 +mISu', the filtered string

will be 'mISu&nbsp; mISu'.

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>Good buyer/bad cracker</FONT></FONT></CENTER>

</TD>

</TR>

</TABLE>

The verification routine is very simple and easy to patch: the program

pushes the adresses of the two strings, calls a verification routine which

returns in eax: 1 if&nbsp; correct username/regcode, 0 if bad username/regcode.

Than verifies the value in eax and separates the good buyer/bad cracker:



<P><FONT FACE="Courier"><FONT SIZE=-1>:10003B70 56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push esi</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B71 8B742408&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov esi, dword ptr [esp+08]&nbsp;&nbsp; </FONT>;username string address</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B75 56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B76 FF158CF50710&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

Call lstrlenA</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B7C 83F805&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp eax, 00000005&nbsp;&nbsp;</FONT> ;verifies if the username string</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B7F 7D04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jge 10003B85&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;has at least

5 characters</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B81 33C0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor eax, eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B83 5E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B84 C3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

ret</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B85 682D224900&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 0049222D&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;an encoding key</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B8A 56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push esi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT>;username string

address</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B8B E820500000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 10008BB0&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;call encryption routine</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B90 83C408&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 00000008 </FONT>;in eax is the key</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B93 8BF0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov esi, eax</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B95 8B44240C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+0C]&nbsp;&nbsp;</FONT> ;regcode string address</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B99 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push eax</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003B9A E801B30400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 1004EEA0&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;code transforming routine</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003B9F 83C404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 00000004</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003BA2 33C9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor ecx, ecx</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003BA4 3BF0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp esi, eax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT>;compare the two keys</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10003BA6 0F94C1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

sete cl</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003BA9 8BC1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, ecx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;set in eax the result</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003BAB 5E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop esi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT>

;1 if good buyer</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10003BAC C3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

ret&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT>

;0 if bad cracker</FONT>

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>Strings encryption</FONT></FONT></CENTER>

</TD>

</TR>

</TABLE>

Usually the programs generate a key from the username, a key from the code,

and compare the two keys. In order to make our keygenerator, we'll have

to reverse the username encoding algorithm, obtaining the key from the

username string, and then reverse the code encoding routine, obtaining

the registration code from the username string key.

<BR>PicaView's code encoding routine transforms the code string that represents

a decimal number in the 32-bit key which is actually the 32-bit hex value

of the registration code. That means that the result of encrypting the

username string is the registration code in decimal.

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>Username string encryption

algorithm. The keygenerator</FONT></FONT></CENTER>

</TD>

</TR>

</TABLE>

Now you really need brains, coz it's the hardest part of the cracking session.

Put a CD with some rock music (I suggest Metallica or Guns'n'Roses) and

sit with the dead listing of the routine in front of your eyes and think.

Take the code piece by piece and build in the same time the C program.

<BR>The C program will have three functions:

<BR>int validate(char*)&nbsp; filters the username string and returns the

number of characters (without spaces)

<BR>long createkey(char*) creates the key using the filtered username string

(with spaces)

<BR>&nbsp;int main(void)&nbsp; main function

<BR>We can build the validation function now:



<P><FONT FACE="Courier"><FONT SIZE=-1>int&nbsp; validate(char*

name)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; int

i,j=0,v=0;</FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;strlen(name);i++)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

name[i]=toupper(name[i]);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

name[j]=name[i];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(name[i]>='A'&amp;&amp;name[i]&lt;='Z'||name[i]==' ')</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(name[i]!=' ') v++;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

j++;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

}</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; name[j]=0;</FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; return

v;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>}</FONT></FONT>



<P>The main function will read the name until it's valid and then display

the key:



<P><FONT FACE="Courier"><FONT SIZE=-1>int main(int argc, char*

argv[])</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; long

key;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; int&nbsp;

i;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; char

name[100];</FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "KeyMaker for PicaView32 1.21" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "----------------------------" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "Coded by +mISu, 05-29-1998&nbsp; " &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; do</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cout &lt;&lt; "Name: ";</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

gets(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(strlen(name)>30) name[30]=0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; while(validate(name)&lt;5);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; key=createkey(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "Key:&nbsp; " &lt;&lt; key &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; return

0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>}</FONT></FONT>



<P>Okay, now let's get the first block of code from the encryption routine:



<P><FONT FACE="Courier"><FONT SIZE=-1>:10008BB0 81ECA8000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

sub esp, 000000A8</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BB6 53&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push ebx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BB7 55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push ebp</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008BB8 8BAC24B4000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov ebp, dword ptr [esp+000000B4] </FONT>;username string address</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BBF 56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BC0 57&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BC1 8BFD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov edi, ebp</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BC3 83C9FF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

or ecx, FFFFFFFF</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BC6 33C0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor eax, eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BC8 33F6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor esi, esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BCA F2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

repnz</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BCB AE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

scasb</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BCC F7D1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

not ecx</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008BCE 49&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

dec ecx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</FONT> ;in ecx is now the username

string length</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BCF 89742410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+10], esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BD3 6683F901&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp cx, 0001</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BD7 0F82A0010000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jb 10008D7D</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008BDD 6683F950&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp cx, 0050</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008BE1 0F8796010000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

ja 10008D7D</FONT>&nbsp; ;verifies if it is between 1 and 80, if it isn't,

exit</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008BE7 39B424C0000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp dword ptr [esp+000000C0], esi </FONT>;in esi is 0</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008BEE 0F85C6000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jne 10008CBA&nbsp;</FONT> ;in [esp+c0] is the encryption key</FONT>



<P>Comparing 0 with 0049222d it will always jump to 10008cba. Let's continue

our reverse engineering to

<BR>1008cba:



<P><FONT SIZE=-1><FONT FACE="Courier">:10008CBA 8BD9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov ebx, ecx </FONT>;in ebx is strlen(username)</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CBC 33FF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor edi, edi </FONT>;edi is the counter</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CBE 81E3FFFF0000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

and ebx, 0000FFFF</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CC4 7E2D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jle 10008CF3</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CC6 0FBE4C3500&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

movsx ecx, byte ptr [ebp+esi] </FONT>;gets char</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CCB 51&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push ecx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CCC E8BF620400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 1004EF90 ;uppercase eax</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CD1 0FAF8424C4000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

imul eax, dword ptr [esp+000000C4] </FONT>;multiplies with encryption key</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CD9 03C7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add eax, edi </FONT>;adds counter to the result</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CDB 83C404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 00000004</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CDE 25FFFF0000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

and eax, 0000FFFF </FONT>;keeps only 16-bit value</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CE3 99&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cdq</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CE4 F7FB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

idiv ebx </FONT>;gets in edx the rest of the division of eax by strlen</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CE6 47&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

inc edi </FONT>;next char</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CE7 6689547418&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov word ptr [esp+2*esi+18], dx </FONT>;saves the value</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CEC 0FBFF7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

movsx esi, di</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CEF 3BF3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp esi, ebx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CF1 7CD3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jl 10008CC6</FONT></FONT>



<P>So, the program generates a table with some values between 0 and strlen-1

at [esp+18]. The table has strlen values. Let's do the same thing in C/C++:



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; length=strlen(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; key=0x0049222d;</FONT>

</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;length;i++)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var=(name[i]*key+i)&amp;0xffff;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

table[i]=(int)(var%length);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<P>The table is stored in int table[100]. Let's get the next block of code:

<P><FONT FACE="Courier"><FONT SIZE=-1>:10008CF3 33FF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor edi, edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CF5 3BDF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp ebx, edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CF7 897C2414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+14], edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CFB 7E43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jle 10008D40</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008CFD 33F6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor esi, esi</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008CFF 668B747C18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov si, word ptr [esp+2*edi+18] </FONT>;gets number from the table</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D04 0FBE543500&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

movsx edx, byte ptr [ebp+esi]&nbsp;</FONT>&nbsp; ;gets the sith character

from string</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D09 52&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push edx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D0A E881620400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 1004EF90 ;uppercase eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D0F 8BD0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov edx, eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D11 8BCE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov ecx, esi</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D13 D3E2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

shl edx, cl&nbsp;</FONT> ;shifts left edx by table value</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D15 83C404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 00000004</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D18 47&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

inc edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D19 8B742410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov esi, dword ptr [esp+10]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D1D 0FAFD7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

imul edx, edi ;multiplies edx with (counter+1)</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D20 0FAF9424C0000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

imul edx, dword ptr [esp+000000C0]</FONT> ;multiplies edx with enc. key</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D28 0BD0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

or edx, eax </FONT>;ors edx with char</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D2A 8B442414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+14]</FONT> ;updates the counter</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D2E 03F2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esi, edx </FONT>;ads to the key edx</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D30 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

inc eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D31 0FBFF8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

movsx edi, ax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D34 3BFB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp edi, ebx</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D36 89742410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+10], esi </FONT>;saves the key until now</FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D3A 89442414&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+14], eax </FONT>;saves the counter</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D3E 7CBD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jl 10008CFD</FONT></FONT>



<P>Well, I think this is the part that does everything. Let's do the same

operations in C/C++:



<P><FONT FACE="Courier"><FONT SIZE=-1>keynow=0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;length;i++)</FONT></FONT>

<BR><FONT FACE="Courier">

<FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier">

<FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

t=table[i];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var=name[t];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var&lt;&lt;=t;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var*=(i+1)*key;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var|=name[t];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

keynow+=var;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>



<P>Let's see the last part:



<P><FONT FACE="Courier"><FONT SIZE=-1>:10008D40 8B442410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+10]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D44 85C0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

test eax, eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D46 7D06&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jge 10008D4E</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D48 F7D8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

neg eax ;eax=modulo eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D4A 89442410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+10], eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D4E 8B442410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+10]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D52 85C0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

test eax, eax</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D54 7508&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

jne 10008D5E</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D56 C7442410DC6F2400&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov [esp+10], 00246FDC </FONT>;if the key is zero, gets this value</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D5E 8B442410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+10]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D62 B900CA9A3B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov ecx, 3B9ACA00</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D67 99&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cdq</FONT></FONT>

<BR><FONT SIZE=-1><FONT FACE="Courier">:10008D68 F7F9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

idiv ecx</FONT> ;gets only the last ten digits</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D6A 89542410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov dword ptr [esp+10], edx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D6E 8B442410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

mov eax, dword ptr [esp+10]</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D72 5F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop edi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D73 5E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop esi</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D74 5D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop ebp</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D75 5B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

pop ebx</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D76 81C4A8000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

add esp, 000000A8</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>:10008D7C C3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

ret</FONT></FONT>



<P>Let's finish this:



<P><FONT FACE="Courier"><FONT SIZE=-1>if(keynow&lt;0) keynow=-keynow;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; if(keynow==0)

keynow=0x00246fdc;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; keynow%=1000000000;</FONT></FONT>

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>KeyGenerator C/C++ source</FONT></FONT></CENTER>

</TD>

</TR>

</TABLE>





<P>&nbsp;I'm tired, I'm working here for five hours long. Here is the whole

C/C++ program:



<P><FONT FACE="Courier"><FONT SIZE=-1>#include &lt;iostream.h></FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>#include &lt;string.h></FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>#include &lt;stdio.h></FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>#include &lt;ctype.h></FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>long createkey(char*);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>int&nbsp; validate(char*);</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>int main(int argc, char*

argv[])</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; long

key;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; int&nbsp;

i;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; char

name[100];</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "KeyMaker for PicaView32 1.21" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "----------------------------" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "Coded by +mISu, 05-30-1998&nbsp; " &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; do</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cout &lt;&lt; "Name: ";</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

gets(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(strlen(name)>30) name[30]=0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; while(validate(name)&lt;5);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; key=createkey(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "Key:&nbsp; " &lt;&lt; key &lt;&lt; endl;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; cout

&lt;&lt; "============================" &lt;&lt; endl;</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; return

0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>}</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>int&nbsp; validate(char*

name)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; int

i,j=0,v=0;</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;strlen(name);i++)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

name[i]=toupper(name[i]);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

name[j]=name[i];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(name[i]>='A'&amp;&amp;name[i]&lt;='Z'||name[i]==' ')</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

if(name[i]!=' ') v++;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

j++;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

}</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; name[j]=0;</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; return

v;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>}</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>long createkey(char*

name)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>{</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; int&nbsp;

table[100], length, i, t;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; long

var, key, keynow;</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; length=strlen(name);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; key=0x0049222d;</FONT>

</FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;length;i++)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var=(name[i]*key+i)&amp;0xffff;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

table[i]=(int)(var%length);</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; keynow=0;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; for(i=0;i&lt;length;i++)</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; {</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

t=table[i];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var=name[t];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var&lt;&lt;=t;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var*=(i+1)*key;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

var|=name[t];</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

keynow+=var;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; }</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; if(keynow&lt;0)

keynow=-keynow;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; if(keynow==0)

keynow=0x00246fdc;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; keynow%=1000000000;</FONT></FONT><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>



<P><FONT FACE="Courier"><FONT SIZE=-1>&nbsp;&nbsp;&nbsp; return

keynow;</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1>}</FONT></FONT>

<BR><FONT FACE="Courier"><FONT SIZE=-1></FONT></FONT>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT SIZE=+2><FONT COLOR="#0000FF">Final Notes</FONT>&nbsp;</FONT></CENTER>

</TD>

</TR>

</TABLE>





<P>Hope you are now convinced that the key generators are the future of

cracking, writing a small C/C++ program is better than giving lamer patches

that don't find the program's dir, and patch in other part that it should,

etc, etc.

<BR>For feedback questions, you can contact me at&nbsp; <A HREF="mailto:plusmisu@hotmail.com">plusmisu@hotmail.com</A>

<BR>&nbsp;

<TABLE BORDER CELLSPACING=2 WIDTH="100%" HEIGHT="22" >

<TR>

<TD BGCOLOR="#C6E7C6">

<CENTER><FONT COLOR="#0000FF"><FONT SIZE=+2>Ob Duh</FONT></FONT>&nbsp;</CENTER>

</TD>

</TR>

</TABLE>



<CENTER><I>I wont even bother explaining you that you should BUY this target

program if you intend to use it for a longer period than the allowed one.

Should you want to STEAL this software instead, you don't need to crack

its protection scheme at all: you'll find it on most Warez sites, complete

and already regged, farewell.</I></CENTER>

<!-- WAY OUT STARTS HERE -->

<HR>

<CENTER><I>You are deep inside fravia's page of reverse engineering, choose

your way out:</I></CENTER>



<CENTER>

<BR><BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="index.html" tppabs="http://www.anticrack.de/fravia/index.html">homepage</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="links.htm" tppabs="http://www.anticrack.de/fravia/links.htm">links</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm"> anonymity</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="student.htm" tppabs="http://www.anticrack.de/fravia/student.htm">students' essays</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy database</A>

 <BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="coumes.htm" tppabs="http://www.anticrack.de/fravia/coumes.htm">counter measures</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="botstart.htm" tppabs="http://www.anticrack.de/fravia/botstart.htm">bots wars</A> 

 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia</A>

<BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 

BORDER=0 VSPACE=0 HSPACE=0><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">Is reverse engineering legal?</A>

</CENTER></CENTER>

<HR SIZE=2>



</BODY>

</HTML>



