<HTML>
<HEAD>
<TITLE>pflexlo1.htm: pilgrim_flexlo1.htm               
</TITLE></HEAD><BODY BGCOLOR=#C0C0C0 TEXT=#001010
VLINK=#405040>
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" 
WIDTH= "100%"  HEIGHT="22">
<TR><TD></TD><TD>
<!-- Choose  a TITLE and a subtitle, choose well! -->
<CENTER><FONT SIZE="+2">
FlexLock
</FONT><BR><FONT SIZE="+1">
"... less secure than the rest of FLEXlm"
</FONT></CENTER></TD><TD>
<!-- Choose  a PROJECT GIF, leave this if unsure -->
<CENTER><A href="student.htm#student_loo_na" tppabs="http://www.anticrack.de/fravia/student.htm#student_loo_na"
tppabs="<a href="http://fravia.org/student.htm#student_loo_na"><IMG
SRC="notassi3.gif" tppabs="http://www.anticrack.de/fravia/notassi3.gif" 
ALT="student" ALIGN=CENTER WIDTH=114 HEIGHT=43
BORDER=0 VSPACE=0 
HSPACE=0></a><br><font color=gray>Not Assigned</FonT>
</center></td></tr><tR><td
bgcolor="#FFFFEA"><center><FONT
COLOR="890000">
<!-- CHOOSE A DATE (will probably be changed) -->
June 1999
</FONT></center></td><td bgcolor="#FFFFEA"><center>by
<font size=+3>
<!-- CHOOSE A HANDLE , i.e. your pseudo (wont be
changed) -->
pilgrim
</fonT></center></td><td VALIGN="center"
bgcolor="#FFFFEA">
<!--
<a href="hcu98_3.htm" tppabs="http://www.anticrack.de/fravia/hcu98_3.htm"
tppabs="<a href="http://fravia.org/hcu98_3.htm" target=_blank>http://fravia.org/hcu98_3.htm</A>"><IMG
SRC="hcu1.gif" tppabs="http://www.anticrack.de/fravia/hcu1.gif"http://fravia.org/hcu1.gif" target=_blank>http://fravia.org/hcu1.gif</a>"
ALT="+cracker"
ALIGN=BOTTOM 
WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></A>
-->
</TD></TR><TR><TD><CENTER><A href="index.html" tppabs="http://www.anticrack.de/fravia/index.html"><IMG
SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif"
 ALIGN="BOTTOM" 
BORDER="0" VSPACE="0" HSPACE="0" width="13"
height="13"></A></CENTER></TD>
<TD BGCOLOR="898030"><CENTER>Courtesy of Fravia's page
of 
reverse engineering</CENTER> 
</CENTER></TD><TD BGCOLOR="898030"><CENTER>
<!-- Your truly+ will edit only if really necessary
-->
slightly edited
<BR>
by fravia+
</CENTER></TD></TR>
<!-- this is for the
data.....fra_00xx....yymmdd....handle..beg+int...not
ass... -->
<TR><TD><FONT
color="#C4C0CF">fra_00xx<BR>980621<BR>Pilgrim<BR>0100<BR>NA<BR>PC<BR></FONT></TD><TD><I><CENTER>
The words "<FONT color=blue>a shareware demo protection that can easily be licensed</FONT>" spell doom, as 
any reverser will immediately 'feel'... Flex protectors are advised to head the words of 
the world best 
kenner of this protection scheme: "<FONT color=blue>FlexLock seems trivial to crack due to the simple
pass/fail return from
the
single API function call. A chain is only as strong as
it's weakest
link.
FlexLm is fairly strong. The single API function call
is laughably
weak.</FONT>".<BR>Enjoy!
</I></CENTER></TD><TD></TD></TR><TR><TD></TD>
<!-- Leonard Coehn's old song, because we are poets,
not only crackers
-->
<TD BGCOLOR="898030"><CENTER></I><B>There is a crack,
a crack in
everything 
That's how the light gets in</B></CENTER>
<!-- Leonard Coehn's old song, because we are poets,
not only crackers
-->
</CENTER></TD><TD></TD></TR><TR><TD VALIGN= "MIDDLE" 
bgcolor="#C6E7C6"><FONT
color=blue><CENTER>Rating</FONT></FONT></CENTER>
</TD><TD VALIGN = "MIDDLE" bgcolor="#C6E7C6"><FONT
color=blue><CENTER>
<!-- CHOOSE A RATING (may be changed) -->
(x)<B>Beginner</B> (x)<B>Intermediate</B> (
)<B>Advanced</B> (
)<B>Expert</B></FONT>
</CENTER></TD><TD></TD></TR></TABLE>
<!-- END HEAD  --><BR>
<!-- CORPUS  -->
<!-- CHOOSE A COMMENT (may be changed)  -->
Here's a quick way to understand FlexLocked applications, 
and a more detailed analysis of FlexLock license
generation.
<HR><CENTER><FONT SIZE="+2">
<!-- Repeat your TITLE  -->
FlexLock
   </FONT><BR>
   <FONT SIZE="+2">
<!-- Repeat your SUBTITLE -->
"... less secure than the rest of FLEXlm"
   </FONT><BR><FONT COLOR="0B7FC1">
<!-- REPEAT YOUR CHOSEN HANDLE HERE -->Written by 
pilgrim
</FONT></CENTER><BR><BR>

<!-- INTRO STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Introduction</FONT>
</FONT></CENTER></TD></TR></TABLE>
We've looked at FlexLm and FlexCrypt, 
here another FlexLm based 'security' program bites the
dust: FlexLock.
It's intended as a shareware demo protection that can
easily be
licensed.
<BR><BR>
Here's a snippet from the release note for FlexLock:
<BR><BR>
NOTE:  We've made every effort to make the FLEXlock
feature secure.<BR>
However, due to the type of security technology used
for FLEXlock, 
it is less secure than the rest of FLEXlm.  This is
why it is disabled
by default.  You should only enable FLEXLOCK if the
convenience of
FLEXlock licensing is more important than the reduced
security it
exposes your product to.
<!-- PASTE HERE YOUR INTRODUCTION -->
<BR><BR>

<!-- TOOLS STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Tools
required</FONT>
</FONT></CENTER></TD></TR></TABLE>
W32DASM, 
your favourite hex editor ( I favour HIEW )
<!-- PASTE HERE YOUR REQUIRED TOOLS -->
<BR><BR>

<!-- TARGET URL STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Target's URL/FTP</FONT>
</FONT></CENTER></TD></TR></TABLE>
<!-- DON'T FORGET TO PASTE HERE THE URL/FTP OF YOUR
TARGET(S) -->
The FlexLock SDK is available at ftp.globes.com, or
www.globetrotter.com<BR>
An example FlexLocked application, Hotz Translator II,
is at
www.hotz.com
<BR><BR>

<!-- PROGRAM HISTORY STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Program History</FONT>
</FONT></CENTER></TD></TR></TABLE>
<!-- PASTE HERE YOUR TARGET'S HISTORY (if any) -->
FlexLock 1.0 started as a standalone product utilising
FlexLm V6<BR>
FlexLock 2.0 has been integrated into FlexLm V7
<BR><BR>

<!-- REAL ESSAY  STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Essay</FONT></FONT>
</CENTER></TD></TR></TABLE>
<!-- PASTE HERE THE TEXT OF YOUR ESSAY
     THIS IS OF COURSE THE MOST IMPORTANT PART
     PLEASE CHECK THE MARGINS WHEN YOU ARE FINISHED! 
     SHOULD NOT BLAST OPERA'S MARGINS OUT! HAVE A LOOK
INSIDE
     YOUR OWN BROWSER WHEN YOU FINISH!  -->


Before you read this, I'd first read Siul+Hackys essay

( <A href="siulflex.htm" tppabs="http://www.anticrack.de/fravia/siulflex.htm">siulflex.htm</A> which started all this ), my further essays (<A href="pilgrim.htm" tppabs="http://www.anticrack.de/fravia/pilgrim.htm">pilgrim.htm</A> & <A href="pilgrim2.htm" tppabs="http://www.anticrack.de/fravia/pilgrim2.htm">pilgrim2.htm</A> & <A href="flexm11.htm" tppabs="http://www.anticrack.de/fravia/flexm11.htm">flexm11.htm</A>), and
Vox's (<A href="flexm.htm" tppabs="http://www.anticrack.de/fravia/flexm.htm">flexm.htm</A>) too.
<BR><BR>
The quick crack:<BR>
================<BR>
<BR><BR>
Install Hotz Translator II.
We see flock.dll which is the flex-lock DLL.
Looking for calls to the DLL we find only one in
tranfl.exe.
Here's the edited dissassembly with detailed notes for
the analysis
later:
<PRE>
:00409160 push eax                    <MODEVAL
:00409161 push ecx                    <- challengeVal
:00409162 push 004A5684               <- FL_INSTANCE_NAME "OR5289000"
:00409167 Call 004422EC               <- FLOCKDLL._FL_FLEXlockAPI@12
:0040916C test eax, eax 
:0040916E jne 004091B2                <- jump if function ran OK
...
:004091B2 mov eax, dword ptr [esp+38] <- modeVal
:004091B6 cmp eax, ebp
:004091B8 je 004091DA                 <- modeVal OK?
:004091BA cmp eax, 00000002
:004091BD je 004091DA                 <- modeVal = purchased?
...
:004091DA mov eax, dword ptr [esp+0C] <- challengeVal
:004091DE xor edi, 40646F84           <- localVal XOR FL_MASKED_CODE
:004091E4 xor eax, 40687EA9           <- challengeVal XOR FL_MASK
:004091E9 cmp edi, eax                <- challengeVal == local val ?
:004091EB mov dword ptr [esp+0C], eax
:004091EF je 0040920C                 <- good_guy
...
:0040920C lea ecx, dword ptr [esp+14]
:00409210 push ecx
:00409211 mov ecx, esi
:00409213 call 0047424C               <- update license info?
:00409218 test eax, eax
:0040921A jne 00409234                <- good_guy
</prE>
So patch the first push eax to be jmp 00409234
This by-passes all license checking and we're done!
<BR><BR>
Deeper analysis of the crack<BR>
============================<BR>
<BR><BR>
First we'd better download the FlexLock 1.0 SDK.
We see it's 32 bit cryptwin encrypted, see previous
essays on how to
crack.<BR>
( note this has the extra checksum at the front of the
Z file to bypass).<BR>
Once it's installed we see an example of how to call
the API 
in csamples\main.c
Here's the edited highlights:
<PRE>
#define FL_MASK 0x24f96f82
#define FL_MASKED_CODE (0x33333333 ^ FL_MASK)
#define FL_INSTANCE_NAME "47123001"

	challengeVal = rand();
	localVal = challengeVal;
	intReturned = 
	  FL_FLEXlockAPI( FL_INSTANCE_NAME, &amp;challengeVal, &amp;modeVal );
	if( intReturned == 0 )
		exit( -1 );
	if ( modeVal != FL_PURCHASED )
		exit( -1 );
	challengeVal ^= FL_MASK;
	localVal ^= FL_MASKED_CODE;
	if( localVal != challengeVal )
		exit( -1 );
</PRE>
So we first see a check to ensure the API function ran
OK.<BR>
Then another on modeVal to ensure we're using the
'purchased' mode.<BR>
Then some sneaky XORs to ensure we've not fiddled with
data.<BR>
<BR>
The main thing to note is that 0x33333333 is the users
'secret code'
This is used to ensure valid users of the FlexLock SDK
cannot easily 
generate licenses for another FlexLock application
without knowing the 
other 'secret key'.
<BR><BR>
So we can see the secret key = FL_MASKED_CODE ^ FL_MASK
<BR>
Looking at Hotz above we see:
<PRE>
:004091DE xor edi, 40646F84           <LOCALVAL XOR FL_MASKED_CODE
:004091E4 xor eax, 40687EA9           <- challengeVal XOR FL_MASK
</prE>
For Hotz this gives secret code = 0x40646F84 XOR 0x40687EA9 = 0x0000C112D
<BR><BR>
As we'll see later, the key is entered in decimal, 
which in this case is 79 08 29. What's this? Someones
birthday?
<BR><BR>
So we can see why the first quick crack had to bypass
both the function
call
and the sneaky checks.
<BR><BR>
Get the FlexLock SDK to work<BR>
============================<BR>
<BR><BR>
The FlexLock SDK consists of two components:
configedit and
makelicence.<BR>
Reading the accompanying documentation we see they
need a FlexLm
license
stored in \licenses\license.lic
We also see an example license:
<PRE>
FEATURE FLConfigEdit gsi 1.0 1-jan-0000 0EC3505C1AE9C5EE1D977 
\ VENDOR_STRING=OR5358 HOSTID=123456
ISSUER="GLOBEtrotter 
\ Software, Inc." ck=48 
FEATURE FLMakeLicense gsi 1.0 1-jan-0000 00C65F5710DFEF9B33F77 
\ HOSTID=123456 ISSUER="GLOBEtrotter Software, Inc."ck=39 
</PRE>
We can see: the vendor name is gsi ( Globetrotter
Software Inc );
the two feature names; configedit requires a vendor
string.
<BR><BR>
Let's make a license for the FlexLock SDK.
We can see lmgr326a.dll in the FlexLock SDK, 
so why not try the genlic32 program
that comes with the FlexLm 6.1 SDK? <BR>
Because it doesn't work, that's why not.<BR>
It generates HOSTID=ANY which the flexlock programs
don't like.<BR>
But if you make your own license generator, as Vox
shows you, 
then we just get "ANY" which works.
<BR><BR>
What's the VENDOR_ID for? Well, it seems that the
FlexLock tools
read the vendor ID and use it as a feature name for
the FlexLock key.<BR>
Finding it is easy, according to the documentation:
After the FLEXlock operation is activated, an entry is
generated in the
registry.  It is located at:<BR>
HKEY_LOCAL_MACHINE->SOFTWARE->GLOBEtrotter Software Inc.->FLEXlock<BR>
So run your flexlocked application then look in the
registry for the
feature name.<BR>
In the case of Hotz Translator it's OR5289000
But it's not that easy, the last three digits are the
product number.<BR>
So the vendor id we require is OR5289 
<BR><BR>
We eventually end up with the licence we need to get
FlexLock to run:
<BR><BR>
FEATURE FLMakeLicense gsi 1.000 permanent uncounted 2CF67BC10C7B17A4222B "" ANY <BR>
FEATURE FLConfigEdit gsi 1.000 permanent uncounted 3C264B61C254B643EAED "OR5289" ANY
<BR><BR>
Generate a license<BR>
==================<BR>
<BR><BR>
Follow the FlexLock SDK instructions and make a
FlexLock license for
your target.<BR>
Note in the case of Hotz the product number needs to
be 000 to give the
desired 
feature name. And the secret code is the one we found
above.<BR>
Run configedit first, then makelicence to generate a
key for the
FlexLocked target.
<BR><BR>
I ended up with this for Hotz: <BR>
FLEXlock-OR5289000-15937-42877-61858-06522-46939-34028-8035
<BR><BR>
This can be entered when prompted, or saved in a
license.dat file in
the 
targets root directory.
<BR><BR>
Further analysis<BR>
================<BR>
<BR><BR>
As usual, I dug a little deeper.<BR>
These are just a few discoveries which may help you.
Please feel free to fill in the missing gaps ;-)
<BR><BR>
The FlexLock licence above is in what Globetrotter
call decimal format.<BR>
It's generated by lc_cryptstr, when passed a flag LM_CRYPT_DECIMAL, 0x20.<BR> 
If we break on the call to lc_cryptstr during licence
generation,
remove 
the LM_CRYPT_DECIMAL we get the readable format of the
license file:
<PRE>
FEATURE OR5289000 FLEXlock 1.000 permanent uncounted
3454EFA72F5E \
	VENDOR_STRING=1889375979 HOSTID=ANY
</PRE>
When saved in the license.dat file this works fine
instead of the
decimal format.
So the feature is defined by our application, vendor
name is FLEXlock.
But what's the vendor string for? 
<BR><BR>
Deeper still...
<BR><BR>
We can easily find the seeds and keys used by FlexLock
by breaking
on lc_init and finding the key 5 XORs.<BR>
But looking at lc_set_attr calls we see FlexLock uses
a vendor-defined
checkout filter. 
Maybe this has something to do with vendor string?

<BR><BR>

<!-- FINAL NOTES STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Final
Notes</FONT>
</FONT></CENTER></TD></TR></TABLE>

It seems the basics behind FlexLm aren't changing,
there are just more and more 'value-added' wrappers
applied around the
core.<BR><BR>
Understand the core and you've won.<BR><BR>
However, FlexLm _is_ flexible, with lots of sneaky
tricks such as
vendor-
defined encryption. I'm sure this isn't the end of
FlexLm.
<BR><BR>
FlexLock seems trivial to crack due to the simple
pass/fail return from
the
single API function call. A chain is only as strong as
it's weakest
link.
FlexLm is fairly strong. The single API function call
is laughably
weak.
<BR><BR>
Thanks go out to all you good people who continue
sharing the
knowledge.
<BR><BR>
pilgrim
<!-- PASTE HERE YOUR FINAL NOTES (if any) -->
<BR><BR>

<!-- OB DUH STARTS HERE -->
<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1"
WIDTH= "100%" 
HEIGHT="22" >
<TR><TD bgcolor="#C6E7C6"><CENTER><FONT size=+2><FONT
color=blue>Ob
Duh</FONT></FONT>
</CENTER></TD></TR></TABLE><CENTER><I>I wont even
bother explaining you

   that you should BUY this target program if you
intend to use it for
a 
   longer period than the allowed one. Should you want
to STEAL this 
   software instead, you don't need to crack its
protection scheme at
all: 
   you'll find it on most Warez sites, complete and
already regged, 
   farewell, don't come back.</I></CENTER>

<!-- WAY OUT STARTS HERE -->
<HR>
<CENTER><I>You are deep inside fravia's page of reverse engineering, 
choose your way out:</I></CENTER>
<BR><CENTER>
<!-- EITHER A NICE GIF LIKE THIS -->

<!--
<a href="project3.htm" tppabs="http://www.anticrack.de/fravia/project3.htm"><img SRC="project3.gif" tppabs="http://www.anticrack.de/fravia/project3.gif"
ALT="projecT3" ALIGN=CENTER WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a>
<br>
<font color=gray>Back to project 3</FonT>
<br><bR>
-->

<!-- OR JUST A LINK LIKE THIS -->

<!--
<img SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="project1.htm" tppabs="http://www.anticrack.de/fravia/project1.htm">Back to Your_chosen_project</A>
<hr width=33%>
-->

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="index.html" tppabs="http://www.anticrack.de/fravia/index.html">homepage</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="links.htm" tppabs="http://www.anticrack.de/fravia/links.htm">links</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="student.htm" tppabs="http://www.anticrack.de/fravia/student.htm">students'
essays</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy
database</A>
<BR>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="realicra.htm" tppabs="http://www.anticrack.de/fravia/realicra.htm">reality
cracking</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="howtosea.htm" tppabs="http://www.anticrack.de/fravia/howtosea.htm">how to
search</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="javascri.htm" tppabs="http://www.anticrack.de/fravia/javascri.htm">java-script
wars</A>
<BR>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm">anonymity
academy</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails</A>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut
CGI-scripts</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia+</A>
<BR>
<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13
BORDER=0 VSPACE=0 HSPACE=0><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">Is reverse
engineering legal?</A>
</CENTER>
<HR>
</BODY>
</HTML>
