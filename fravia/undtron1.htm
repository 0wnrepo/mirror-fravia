<HTML>

<HEAD>

<TITLE>undtron1</TITLE>

</HEAD>

<BODY BGCOLOR="#C0C0C0" TEXT="#001010" VLINK="#405040">

<CENTER><FONT size="+2">Packers and <FONT color="red">Unp</FONT>ackers: phase 1</FONT><BR>

<A href="projunpa.htm" tppabs="http://www.anticrack.de/fravia/projunpa.htm">

<IMG SRC="packers.gif" tppabs="http://www.anticrack.de/fravia/packers.gif" ALT="packers" ALIGN="BOTTOM" WIDTH="114" HEIGHT="43" BORDER="0" VSPACE="0" HSPACE="0"></A><BR>

<BR><FONT size="+4">Tron version 1.30</FONT><BR>

<FONT size="+1">by The Undertacker<BR></FONT>

(19 September 1997, heavily modified by fravia+)</CENTER>



<CENTER><HR><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"> Courtesy of Fravia's page of reverse engineering<BR>

<HR width="33%"> <I>Well, this essay by our srilankan friend: The Undertaker, has given me the possibility to open our new section: &quot;Packers and Unpackers: the arms race&quot;. I have modified this essay, 

editing it, since the exact ROAD used by The Undertacker in order to find the protection scheme was far from clear... I hope that The Undertaker will agree with my changes, if not, I'm ready to modify whatever he feels should be adjusted :-)

</I></CENTER><HR size="6"><FONT size="+2">

<CENTER><B>TRON v.1.30</B><BR>

EXE UNPACKER WITH ANTI-DEBUGGING FACILITY<BR>

BY<BR>

The Undertaker -=BANDA=-<BR><BR></FONT>

</CENTER>

This is the windows' dark age... a period of fear and poverty and black magical software arts, where only few 

wizards, inside the high Micro$oft's towers, know how to assemble and disassemble software, 

while the stupid peasants programmers are condemned to use ineffective and overbloated languages, 

and the Lord of the Gates laughs at their feeble attempts to break free of an imposed OS-poverty.

<BR><BR>

Because Micro$oft does not want people to be free, see, they would loose money in such a process... they are pushing everybody to learn VB+, Access and all other NON powered programming languages... keeping assembly aside. Only &quot;fringe's&quot; 

little groups: demomakers, reverse engineers, virus writers and crackers still use assembly, and they too are in danger, censored and sued and prosecuted by the lackeys and servants of the black Lord of the Gates. 

<BR><BR>

People that use LOW powered languages can do only very little, only miserable things. So Micro$oft can dominate the software arena very easily... where are the assembly coders (and the resources) that, if concentrated on a simple software developing project, would quickly push Word for windows in the oblivion that such a miserable wordprocessor deserves? Nowhere... you only get as flawed &quot;concurrence&quot; to MS-abomination, aborts like Wordpro, Wordperfect for windows, amipro and similar poor concoctions, written in the 

overbloated languages of the enemy and THEREFORE unable to fight him aside.

<BR><BR>

The reason for the weak protection schemes used by Micro$oft is not that they &quot;don't care&quot; if we crack 

or not their programs, is their &quot;hybris&quot;: they think that people are already &quot;done&quot;, that everybody only knows low powered programming languages... that assembly is only propriety of few <FONT color="blue">reverse engineers</FONT> (a good ancient race of white non-commercial wizards, a race that has almost disappeared... +ORC has tried hard to &quot;revamp&quot; interest in it, yet the knowledge is -as before- confined to the few readers of these lines) and to the <FONT color="blue">research and development engineers</FONT> (many of them were crackers at dawn, then followed the dark path of money... and are now greedy servants of the big corporations and our worst enemies)

<PRE>

So! Learn right now ASSEMBLY LANGUAGE (and nothing else until you have 

learned it). 

The more you learn and understand the more you'll be able to damage Micro$oft!

Try to contribute something, to the world, in order to get rid of Micro$oft's 

&quot;one man show&quot;.

Develop a O/S (No kidding! If you try you can do it... you can do ANYTHING 

when you know assembly!) in order to kick Micro$oft away from the 

scene.

I will release my O/S early 1998 all over the web (BANDA v1.0b GUI).



Finally, I would like to thank fravia+ for his great contribution to our 

world of assembly.



OK, let's start our work... we are here, to day, in order to use fully a very 

important tool for our reverse engineering endeavours: TRON, a very good 

(and powerful) Unpacker. 

As usual, we are reversing targets only for fun and for educational purposes... 

tron is a good tool, made by a good programmer (Michael Bauder, Germany).

A pity that it is so miserably protected. Anyway, if you use it, pay for it, as I 

did. This is a very good dos application (yes, there are still very good quality 

DOS programs available) and deserves it.



TRON is better than the well know UNP.

This tool has an unique feature for &quot;anti-debugging&quot; tricks.

This program can unpack files packed with UNKNOWN packers &amp; encrypters, 

tracing through the packed code (yes, it spares us our own work!).



OK, download this program <A href="tppmsgs/msgs2.htm#236" tppabs="http://www.anticrack.de/fravia/tppmsgs/msgs2.htm#236">here</A> and let's start 

reversing it right now.



Tools:	Wdasm89: create your tron.alf



Let's see what &quot;hooks&quot; we have: run a &quot;forbidden&quot; option (say -u) and you'll

get following nag-string: 

<FONT color="blue">&quot;Unregistered! You must register to use this part of tron&quot;</FONT>

And what does our target make afterwards? The program stupidly exits 

back to DOS! That's GOOD! :-)



In all banal dos programs there are terminate with return code interrupts (21/4C). 

These represent  the end of the program, and like all endings, there may be 

&quot;happy ends&quot; and &quot;sad ends&quot;. 

If you have done something wrong (like for instance asking for a registered 

option being unregistered :) you'll get a sad ending, most of the time.

Let's start reversing from there. We'll find quite a lot of INT 21/4C inside 

this target (probably one for each recognised packer... dunno... who cares?), 

yet most will be under the &quot;happy ending&quot; form 21/4C-00... like this one, 

taken as example:

<FONT color="purple">

:0001.197E B8004C                 mov ax, 4C00

:0001.1981 CD21                   int 21

</FONT>

which does NOT interest us, since 00 (in al) is, as I said, the &quot;normal 

termination&quot;. There are only two different int 21/4C inside our target, 

and, loo and behold, they have both to do with the protection of tron!



THE FIRST &quot;UNHAPPY&quot; INT 21/4C inside tron:

* Referenced by a Jump at Address:0001.192C(C)

|

:0001.193D E8F0FF          call 1930

:0001.1940 A1B711          mov ax, word ptr [11B7]

:0001.1943 8B16B511        mov dx, [11B5]

:0001.1947 A30B11          mov word ptr [110B], ax

:0001.194A 89160D11        mov [110D], dx

:0001.194E E83200          call 1983   

:0001.1951 B44C            mov ah, 4C  ;terminate with unknown ret code in al

:0001.1953 CD21            int 21      ;could be anything the previous call

                                              ;decides

THE SECOND &quot;UNHAPPY&quot; INT 21/4C inside tron:

:0001.3C25 B8FF4C          mov ax, 4CFF  ;returns -1, a really &quot;sad&quot; ending

:0001.3C28 CD21            int 21         



AH AH!, a call immediately before the first one, responsable for an 

eventual sad ending... we'll need to have a look!<FONT color="purple">

:0001.194E     call 1983

:0001.1953     INT21/4C_who_knows until we examine the previous call?

</FONT>



AH AH! The second one returns FALSE!

We'll need to backtrace, if you look at your dead listing you'll see 

that a file has been closed short before... and you could go back

from here...

:0001.3C28	INT 21/4C_FF



Let's have a look at both &quot;unhappy&quot; interrupts... as you'll see the 

first one will show THE START of our target's protection, and the 

second one will show THE END of our target's protection. 

Since going forward is easier than backtracing, we'll begin 

investigating the suspect call before the first int 21/4C unknown 

ending (note that, if necessary, we could have proceeded the other 

way round, &quot;remounting&quot; back to our target's protection from the 

int 21/4C that returns the &quot;sad ending&quot; FF). 

The first occurrence of an eventual &quot;not normal&quot; termination is 

preceded by a call which we have to investigate... as you'll see, 

it checks about the eventual &quot;necessity&quot; to check the user:



* Referenced by a CALL at Address:0001.194E

|

:0001.1983 803E730B01      cmp byte ptr [0B73], 01  ;check flag check user

:0001.1988 7503            jne 198D                 ;continue with list_o_calls

:0001.198A E95E03          jmp 1CEB                 ;check user





* Referenced by a Jump at Address:0001.198A(U)

|

:0001.1CEB 813E0202FB75    cmp word ptr [0202], 75FB   ;check the Reg value

:0001.1CF1 7409            je 1CFC                     ;Registered User! Go ahead!

:0001.1CF3 BA3809          mov dx, 0938                ;Bad user, beggar off!

                       ;at ~38 you have inside the code of our target the 

                       ;string &quot;0D/0A/UNREGISTERED!!! you must register to use 

                       ;this part of tRON!

:0001.1CF6 E89E22     call 3F97          ;call INT 21/2 output char

:0001.1CF9 E9F41E     jmp 3BF0           ;close file and terminate -1



Infact, if you follow the unconditional jmp to 3BFO, you'll soon land here:

:0001.3C25 B8FF4C                 mov ax, 4CFF  ;returns -1

:0001.3C28 CD21                   int 21



OK, that's war for tron's protection:

The crack seems indeed utterly simple:<FONT color="blue">

:0001.1CF1 7409    je 1CFC    ;Registered User! Go ahead!</FONT>

changed into<FONT color="blue">

:0001.1CF1 EB09    jmp 1CFC   ;Anybody! Go ahead!</FONT>

</PRE>

Well, looking behind at the protection scheme used by tron, and at the 

code snippet we have examined, one would probably not readily agree with 

tron's Author about this program being written in &quot;<FONT color="blue">Pure 

HARDCORE Assembler! What else? 16 &amp; 32 bit technology!</FONT>&quot;, as they 

claim inside tron.doc :-)

<PRE>

BTW, there is another, completely different way to track the same scheme:

Use Softice 2.8 for DOS

Create a packed file lhaed.exe using a packer

Run Softice loader with <FONT color="blue">ldr tron -u lhaed.exe</A></FONT>

BPX CS:194E  (:0001.194E     call 1983)

Follow the call and so on (see above).



Many thanks to the +HCU guys!



The Undertacker -=BANDA=- //SRI LANKA//



</PRE>

<HR>

<CENTER><I>You are deep inside fravia's page of reverse

engineering, choose your way out:</I></CENTER>





<P><CENTER>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="projunpa.htm" tppabs="http://www.anticrack.de/fravia/projunpa.htm">Back to the arms race</A>

<HR width="22%">



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="javascript:if(confirm('http://fravia.org/tppmsgs/msgs0.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://fravia.org/tppmsgs/msgs0.htm#84'" tppabs="http://fravia.org/tppmsgs/msgs0.htm#84">homepage </A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"> <A HREF="javascript:if(confirm('http://fravia.org/tppmsgs/msgs0.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://fravia.org/tppmsgs/msgs0.htm#73'" tppabs="http://fravia.org/tppmsgs/msgs0.htm#73">links

</A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0" NATURALSIZEFLAG="0"> <A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm">anonymity

</A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC </A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="javascript:if(confirm('http://fravia.org/tppmsgs/msgs0.htm  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://fravia.org/tppmsgs/msgs0.htm#82'" tppabs="http://fravia.org/tppmsgs/msgs0.htm#82">students' essays </A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools

</A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails </A><BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy database </A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut </A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms </A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia

</A><BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">is reverse engineering legal? </A></FONT></CENTER></P>



<P><CENTER><FONT SIZE="-1"><HR></FONT></CENTER>

</BODY>

</HTML>















