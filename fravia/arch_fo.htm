<HTML>



<HEAD>

<TITLE> About Archie</TITLE>

</HEAD>



<BODY BGCOLOR="#e4e4e4" hlink="#0000ff" vlink="#009148" text="#000000" alink="9f9fff">

<HR><CENTER><H3><A href="javascript:if(confirm('http://www.fravia.org/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.fravia.org/'" tppabs="http://www.fravia.org/">Fravia</A>'s comment</H3></CENTER>

<I>I will just publish, from now on, the essays I like <U>exactly as I get them</U>.

<BR>

Authors are invited to<UL>

<LI>1) download the source code;

<LI>2) correct it;

<LI>3) <B>very important</B> CHECK on an Opera browser that it looks ok;

<LI>4) resend it to me corrected

</UL>

And I'll update it.

<HR width=33%>

Note that if the essay should infringe on anyone copyrights, and if I receive a legitimate request 

to nuke it, it will immediately disappear from my site, so you always better write software reversing 

essays that are not "specific" target related... so, pointing out deficiences is OK, 

 individuating "software black holes" is a must, but 

explaining lamers 

how to register (or, even more silly, how to make a coward keygen for the idiots) is definitely NOT "fraviatiquette".<BR>

Indeed from now on I want to HELP, not to damage programmers.

<HR width=33%>

This said I publish this perfectly formatted and extremely useful essay by Kuririn with pleasure. Archie's searching is 

somewhat becoming a "lost" art, and I'm glad that Kuririn has accepted to help all Internet-newbies 

to understand it... hope more will follow!

</I>

<HR size=1>

<BR>



<H1 align="center">Archie</H1>



<BR>



<HR width="50%">



<H3><CENTER>The File Transfer Protocol (FTP)</CENTER></H3>



<P>

<BLOCKQUOTE>

FTP is a way of moving computer files from one site to another ;

anonymous FTP is our concern here since it is open to anyone. The

administrators at computer sites around the world have made directories full of information available to anyone who logs

is as 'anonymous' (with the convention of using your email address

as a password). Since then there is no special permission required

to get into these sites, they constitute a kind of "swap box," where

everything is freely available. The range of programs available

at these sites (now enormous) grows exponentially by the day.

</P>

</BLOCKQUOTE>



<H3><CENTER>A Short History</CENTER></H3>



<P>

<BLOCKQUOTE>

Archie was developed at McGill University's School of Computer Science

by Alan Emtage, Bill Heelan, and Peter Deutsch. (Apparently) this computer tool (like many) was devised out of the university's need to

save money. Looking for public domain software, the McGill group began

searching anonymous FTP archive sites, and eventually began to automate the process of scanning their findings. From this evolved an

information tool that is among the most widely used on the Internet.

Deutcsh and Emtage, went on to found Bunyip Information Systems of Montreal, which licenses the archie server system and provides upgrades  and support. (Newest Version to date is 3.5).

</BLOCKQUOTE>

</P>





<H3><CENTER>A Short Definition</CENTER></H3>

<P>

<BLOCKQUOTE>

Consider archie as a set of related functions. The software maintains

a list of Internet FTP sites known as the Internet Archives database (the term archie is a play on the term "archive"). The database is searchable by a variety of servers across the internet. Note well that

that archie does not make data sweeps across the entire Internet ; rather ; it targets specific sites, with the permission of their administrators, and searches them. Of course going through the directories manually would take constant vigilance as new files

and directories were added to one or another site. By automating

the process, archie can make its own sweep of FTP directories, compiling them and storing the results in its database. Each site's

holdings therefore stay almost up-to-date at any given moment, (given

a slight overlap) that is to say an archie search could point to a file that had been removed shortly after the last archie database update. (and vice versa: a new file that a given archie doesn't yet

know about could be added to the directories at a specific site.) If you want to see the the listings that archie creates for its database ; they are available at the individual server sites.

</BLOCKQUOTE>

</P>



<H3><CENTER>Using Archie (via telnet) kinda remedial</CENTER></H3>

<P>

<BLOCKQUOTE>

The first thing of course is to use a telnet client (for the

sake of simplicity let's just say we're using the plain ol'

unix telnet client). So you need a server to telnet into,

let's use <B>archie.th-darmstadt.de</B>. So you issue the

command <B>telnet archie.th-darmstadt.de</B>, and you see the following: (this after you login with <B>archie</B>)



<BR><BR>

</BLOCKQUOTE>

<HR>

<DIV align="left">

<CENTER>Welcome to Archie!</CENTER><BR>

<CENTER>Vers 3.3</CENTER><BR><BR>



Currently the help system provides support for the following languages:<BR><BR>



 deutsch   english   francais<BR><BR>



Use 'set language' to change the language<BR><BR>



# Bunyip Information Systems, Inc., 1993, 1994, 1995<BR><BR>



# Terminal type set to `vt100 24 80'.<BR>

# `erase' character is `^?'.<BR>

# `search' (type string) has the value `exact'.<BR>

archie>

<HR>

<BLOCKQUOTE>

Aside from being able to identify the current version of this archie

server, it is important to note the default search type --which is `exact' here ; meaning that anything you type in will be looked for

as an exact match. So this is what +orc meant by nomen omen eh? So if you type in pumpkin you will not get hits such as pumpkin.txt or pumpkin.tar.Z (simple enough). To set this parameter you use the

<B>set</B> command where <B>search</B> is the variable and <B>sub</B>

tells specifically how the variable is to be applied.In other words --The 'search' variable determines the kind of search performed on the

database by the 'prog' command, providing flexibilty on search times and ranges. <B>set search exact</B>! Now <B>set search sub</B> (of course all of this occurs

on the archie> command line before you conduct your search, set variables first search later in other words). So <B>set search sub</B>

which is default for some servers, will retrieve any file or directory

name containing your search term within it, ignoring case. So if you search for -tin- you will get hits ranging from -bulle<I>tin</I> to

<I>tin</I>man-. An example of this would be to search for orc.htm,

so first you write <B>set search sub</B> and then you write <B>find

orc.htm</B>. Here is an example of this simple process (truncated).

</BLOCKQUOTE>

</DIV>

<BR>

<HR>

archie> set search sub<BR>

archie> find orc.htm<BR>

# Search type: sub.<BR>

working...  <BR><BR>





Host ftp.imag.fr        (129.88.30.10)<BR>

Last updated 00:30 21 Jan 1999<BR><BR>



    Location: /pub1/mail/mh/book/mh<BR>

      FILE    -rw-rw-r--         14997  23:00 27 Sep 1997 <BR> nmen<B>orc</B>.htm<BR><BR>

Host ftp.sics.se        (193.10.66.43)<BR>

Last updated 15:54 23 Feb 1998<BR><BR>



    Location: /www/people/orc<BR>

      FILE    -rw-r-----         17024  00:00 26 Sep 1994  <B>orc</B>.html<BR>

<HR>

</P>



<P><BLOCKQUOTE>

Other types of searchs include <B>set search subcase</B> which works like a regular sub<I>string</I> search, except it differentiates

between upper- and lowercase letters. <B>set search regex</B> makes use of UNIX regular expressions to conduct the search. Used without

furthur specification, a regex search becomes a sub<I>string</I> search, because regular expressions assume a wild-card character at the beginning and end of the search term. Using the caret (^) and the dollar sign ($) you can specify that the search term should only appear at the beginning of the retrieved file or directory of the end of the retrieved file or directory. e.g., ^eros would return hits that

contain the search term at the beginning of the file eros$ would return hits that contain the search term at the end of the file. (more on this later) <BR><BR>



<H2><CENTER>Some other search parameters explained</CENTER></H2>



<UL>

<LI><B>set search exact_sub</B> : here you are searching for an exact hit, but if archie finds no matches, it will then try the sub<I>string</I> search statagem.</LI>

<LI><B>set search exact_subcase</B> : here the search begins using the exact stratagem, but if it fails, it switches to a subcase or case-sensitive sub<I>string</I> search.</LI>

<LI><B>set search exact_regex</B> : this begins with the exact search method, but switches to regex if no matches are found.</LI>

<LI><B>set match_domains <I>string</I></B> : this means that you can determine a particular domain that you want to search such as Universites. Here you would write <B>set match_domains edu</B> or

you might want to limit your search to Switzerland, write <B>set match_domain ch</B>.</LI>

<LI><B>set match_path</B> Here you can restrict your search by examining the directories archie will look in for your search term.

This makes most sense if you have an idea that the file you are looking for fits into a general catagory. For instance if you are looking for a way to prepare seafood you could restrict your search

to directories called <I>recipes</I> perhaps <I>food</I> by writing

<B>set match_path recipes</B>. This search ignores case. Multiple

terms are separated by colons e.g., <B>set match_path recipes:food</B>

will retrieve files with one or both of these components --recipes or food-- in the names of the directories that lead to them.</LI>

<LI><B>set sortby ?</B> [<I> filename | hostname | none | size | time </I>] These sort archie's output. (none means no sort, which is useful if you have declared a sort and wish to revoke it).</LI>

<LI><B>set output_form terse</B> The opposite of this is <B>set output_form verbose</B> The normal results of an archie search are in verbose mode, providing the host name and IP number, the date of the file's last updating, its directory location, and associated file information (like permissions). The terse format reduces the output to a single line an example being

<B>ftp.std.com 00:00 6 Oct 1990 512 bytes /src/pc/comm/qmodem</B></LI>

<UL>

</BLOCKQUOTE></P><BR><BR><P><BLOCKQUOTE>

If you want to examine your results (since they can sometimes scroll by too rapidly to view) you might write at the prompt <B>set mailto <I>your@email.address</I></B>. Now you can use tha mail command to send yourself and others the results of your query. Or else you might rather use the <B>set pager</B> command which displays material one page at a time (which is the program called less under UNIX), advancing through the pages by pressing your spacebar. When you are finished you enter a q followed by a RETURN. The command <B>list</B>

can be used to indicate all the sites in the database at the server site, or in conjunction with a UNIX regular expression to limit the search to particular domains. For example, you can use <B>list</B>

to search for all sites in Switzerland, using a regex term: <B>list .*ch$</B> This returns any site with the ch domain name, and excludes others. The $ sign (again) specifies that no text should follow the search term ; the .* allows any text to exist in front of the term.

A full example of this:<BR><BR>



archie> list .*ch$<BR>

# Your queue position: 1<BR>

# Estimated time for completion: 5 seconds.<BR>

working... O<BR><BR>



aragorn.unibe.ch                             130.92.9.51     14:30 22 Jan 1999<BR>

bandon.unisg.ch                            130.82.101.96     00:37 29 Oct 1997<BR>

claude.ifi.unizh.ch                          130.60.48.8     04:49 27 Jan 1999<BR>

ftp.inf.ethz.ch                            129.132.167.2     12:08 22 Jan 1999<BR>

domreg.nic.ch                                130.59.1.80     12:08 22 Jan 1999<BR>

iacrs1.unibe.ch                              130.92.11.3     14:28 22 Jan 1999<BR>

liasun3.epfl.ch                           128.178.155.12     05:13 29 Jan 1997<BR>

liaftp.epfl.ch                            128.178.155.15     23:42 24 Feb 1998<BR>

lucy.ifi.unibas.ch                          131.152.81.1     04:59 29 Jan 1997<BR>

ftp.switch.ch                               130.59.10.32     22:20 26 Feb 1997<BR>

iamftp.unibe.ch                              130.92.64.5     14:29 22 Jan 1999<BR>

ftp.cscs.ch                                148.187.10.13     14:30 22 Jan 1999<BR>

ftp.unizh.ch                                130.60.68.41     04:46 27 Jan 1999<BR>

rd24.cern.ch                              137.138.61.190     23:42 24 Feb 1998<BR>

sunsite.cnlab-switch.ch                    195.176.255.9     12:09 22 Jan 1999<BR>

ftp.unibe.ch                                 130.92.6.40     14:30 22 Jan 1999<BR>

ftp.unige.ch                                129.194.17.1     12:07 22 Jan 1999<BR>

ftp.ethz.ch                                 129.132.1.45     23:40 24 Feb 1998<BR>

archie>



<BR><BR>



Now the last few command I will cover are <B>help</B> which you can type a ? at the help prompt to get a list of available subtopics. Use <B>quit</B> to exit (of course! ;-) and <B>servers</B> to generate a list of publicly available archie servers known to the site you are

currently using. You can also type in <B>manpage</B> to get a look

at the manual page for archie!.

<HR><BR>



<H2><CENTER>regex and whatis</CENTER></H2>



The whatis command:

archie maintains a second set of data called the

Software Description Database, in which are found short

descriptions and the names of numerous files stored

around the internet. As with archie's Internet Archives

database, it should be understood that not all these

files are executable programs (i.e., docs and other

stored data). whatever it is, using the Software Description

database through the whatis command can help. To search

the database, use whatis followed by the term you are looking

for. I might, want to know example below<BR>

<HR>

archie> whatis moon<BR>

astro <I>Computes astronomical data about the sun, moon, and

planets</I>

jupmoons <I>Jupiter's major moons simple plotter [in perl]<BR>

moon A phase-of-the-moon-program</I><BR>

moontool <I>The moon on a Sun</I><BR>

phoon <I>Phase of the moon, date routines</I><BR>

rise_set <I>Sun and Moon rise/set program</I><BR>

xmoon <I>Dynamically display astronomical data concerning the

moon and the sun</I><BR>

xphoon <I>Draw the current phase of the moon on the root window (under X11)</I><BR><BR>



next you search!<BR>

archie> find jupmoons <BR>

# Search type: exact.<BR>

working... <BR><BR>





Host ftp.uni-koeln.de (134.95.100.202)<BR>

Last updated 00:32 23 Jan 1999<BR><BR>



Location: /usenet/comp.sources.misc/volume13<BR>

DIRECTORY drwxrwxr-x 2048 23:00 22 Apr 1993 jupmoons<BR><BR>





Host scitsc.wlv.ac.uk (134.220.4.1)<BR>

Last updated 09:07 13 Feb 1997<BR><BR>



Location: /pub/infomagic/usenet/misc/volume13<BR>

FILE -rw-r--r-- 8934 01:00 25 Aug 1991 jupmoons<BR>

<HR>

regex expressions or UNIX regular expressions (basic stuff).

As I said before using a search term without further regex expressions causes the search to be treated as a hunt for subsearches ; the effect is as if you entered <B>set search sub</B>. So if you do a <B>find orc</B> (you will probably get "hey fella there's no FTPs on the moon ;-)" but seriously it is the same as typing <B>find .*orc.*</B> which

is covered in the list command above. So aside from these signs ($), (^), and (.) and (*) --let me say one thing about the asterisk and period...the asterisk stands for zero or more occurences of the preceding regular expression, in other words the example <B>.*orc.*</B> the period lets the search term be preceded by any <B>one</B> letter, while the asterisk means that <B>any</B> number of letters can occur before the <B>orc</B> string occurs. So the asterisk looks to the preceding expression, which is a period, and determines that it can occur any number of times (dig it?). The same goes for the end of the term, so that any number of letters can occur at the end of the term as well. Use [brackets] to show a set of characters you want to match. example: <B>[smt]end</B>  you will get results ranging through [send, mend, tend], matching any of the four bracketed characters to the string that follows. It will end up finding much more coz the regular expressions have .* at the beginning and at the end unless a carat (^) or dollar sign ($) appears. There are many more

expressions such as these. I end now! yet the end is good no? heh I steal Nexors form. bye friends hope this helps (I know its all out there yet I also know its good to have a quick printed reference ;)





</BLOCKQUOTE></P>

<HR>

<CENTER>

<FORM ACTION="http://www.anticrack.de/cgi-bin/archieplexform">



Search for: <INPUT NAME="query">

<INPUT TYPE="submit" VALUE="Submit">



<INPUT TYPE="reset" VALUE="Reset">



<P>

There are several types of search:

<SELECT NAME="type">

<OPTION>Case Insensitive Substring Match

<OPTION>Exact Match

<OPTION>Case Sensitive Substring Match

<OPTION>Regular Expression Match

</SELECT>



<P>

The results can be sorted

<INPUT TYPE="radio" NAME="order" VALUE="host" CHECKED >By Host or

<INPUT TYPE="radio" NAME="order" VALUE="date">By Date



<P>

Several Archie Servers can be used:

<SELECT NAME="server">

<OPTION VALUE="archie.au">Australia

<OPTION VALUE="archie.univie.ac.at">Austria (University of Vienna)

<OPTION VALUE="archie.belnet.be">Belgium (BELNET)

<OPTION VALUE="archie.bunyip.com">Canada (Bunyip)

<OPTION VALUE="archie.cs.mcgill.ca">Canada (McGill University)

<OPTION VALUE="archie.uqam.ca">Canada (Uqam)

<OPTION VALUE="archie.funet.fi">Finland (FUNET)

<OPTION VALUE="archie.univ-rennes1.fr">France (University of Rennes)

<OPTION VALUE="archie.th-darmstadt.de">Germany (TH Darmstadt)

<OPTION VALUE="archie.ac.il">Israel

<OPTION VALUE="archie.unipi.it">Italy (University of Pisa)

<OPTION VALUE="archie.wide.ad.jp">Japan (WIDE)

<OPTION VALUE="archie.kornet.nm.kr">Korea (Kornet)

<OPTION VALUE="archie.sogang.nm.kr">Korea (Sogang University)

<OPTION VALUE="archie.nz">New Zealand (Waikato University)

<OPTION VALUE="archie.uninett.no">Norway (Uninett)

<OPTION VALUE="archie.unit.no">Norway (Unit)

<OPTION VALUE="archie.icm.edu.pl">Poland

<OPTION VALUE="archie.rediris.es">Spain (Rediris)

<OPTION VALUE="archie.luth.se">Sweden (Lund)

<OPTION VALUE="archie.switch.ch">Switzerland (SWITCH)

<OPTION VALUE="archie.ncu.edu.tw">Taiwan

<OPTION VALUE="archie.doc.ic.ac.uk" SELECTED>United Kingdom (Imperial College London)

<OPTION VALUE="archie.hensa.ac.uk">United Kingdom (HENSA)

<OPTION VALUE="archie.sura.net">USA-MD (SURAnet)

<OPTION VALUE="archie.unl.edu">USA-NE (University of Nebraska)

<OPTION VALUE="archie.internic.net">USA-NJ (Internic)

<OPTION VALUE="archie.rutgers.edu">USA-NJ (Rutgers University)

<OPTION VALUE="archie.ans.net">USA-NY (ANS)

</SELECT>



<P>

You can restrict the results to a domain (e.g. "uk"):

<INPUT NAME="domain" SIZE=15>



<P>

You can restrict the number of results to a number &lt; 100:

<INPUT NAME="hits" SIZE=5 value="95">



<P>

The impact on other users can be:

<SELECT NAME="nice">

<OPTION>Not Nice At All

<OPTION SELECTED>Nice

<OPTION>Nicer

<OPTION>Very Nice

<OPTION>Extremely Nice

<OPTION>Nicest

</SELECT>



</FORM>

</CENTER>

<HR>













</BODY>

</HTML>

