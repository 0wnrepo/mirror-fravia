<HTML>



<HEAD>



<!--  formamus.htm version 02 February 1998 



      INSTRUCTIONS FOR SUBMITTING: DO NOT USE HTML EDITORS!



      SEARCH THIS TEXT FOR THE STRING "Your_" 



      AND REPLACE WITH WHATEVER YOU WANT TO PUBLISH! 



      THANKS A LOT: this will allow automated retrieval -->



<TITLE>mks.htm MKS Toolkit quack</TITLE>



</HEAD>







<BODY BGCOLOR=#C0C0C0 TEXT=#001010 VLINK=#405040>



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%  HEIGHT=" 22">



<TR><td></td>



<td>



<!-- Choose  a TITLE probably wont be changed -->



<center><FONT SIZE="+2">MKS toolkit revisited</fonT><br>



        <FONT SIZE="+1">continuing drlan's work</fonT>



</center>



</td>







<td>



<!-- Choose  a PROJECT GIF, leave this if unsure -->



<center><a href="student.htm#student_loo_na" tppabs="http://www.anticrack.de/fravia/student.htm#student_loo_na"><IMG SRC="notassi3.gif" tppabs="http://www.anticrack.de/fravia/notassi3.gif" ALT="student" 



ALIGN=CENTER WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 



HSPACE=0></a>



<br>



<font color=gray>Not Assigned</FonT>



</center></td></tr>



<tR>



<td bgcolor="#FFFFEA"><center>



<FONT COLOR="890000">

25 July 1998



</FONT></center>



</td>



<td bgcolor="#FFFFEA"><center>by <font size=+3>



<!-- CHOOSE A HANDLE (wont be changed) -->



bb



</fonT></center>



</td>



<td VALIGN="center" bgcolor="#FFFFEA">



<!--



<a href="hcu98_3.htm" tppabs="http://www.anticrack.de/fravia/hcu98_3.htm"><IMG SRC="hcu1.gif" tppabs="http://www.anticrack.de/fravia/hcu1.gif" ALT="+cracker" ALIGN=BOTTOM 



WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a>



-->



</td>



</tr>



<TR><td><center><a href="index.html" tppabs="http://www.anticrack.de/fravia/index.html"><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" 



BORDER="0" VSPACE="0" HSPACE="0" width="13" height="13"></a></center></td>



<TD BGCOLOR="898030"><center>Courtesy of Fravia's page of 



reverse engineering</center> 



</center></TD>



<td BGCOLOR="898030">



<center>



<!-- Your truly+ will edit only if really necessary -->



slightly edited<br>



by fravia+</center></td>



</TR>



<!-- this is for the data.....fra_00xx....yymmdd....handle..beg+int...not ass... -->



<tr><td><font color="#C4C0CF">fra_00xx<bR>980715<br>bb<br>0100<br>NA<br>PC<br></fonT></td><td><i><center>



Well, another essay by bb, that shows you how to use your windows' knowledge to fool windows'

targets into doing anything you want. I would advice you to read first bb's other (very 

good) essay about <a href="bbnag1.htm" tppabs="http://www.anticrack.de/fravia/bbnag1.htm">nag screen reversing techniques</a>.



</i></center></td>



<td></td>



</tr>



<TR><td></td>



<!-- Leonard Coehn's old song, because we are poets, not only crackers -->



<TD BGCOLOR="898030"><center></i><b>There is a crack, a crack in everything 



That's how the light gets in</b></center>



<!-- Leonard Coehn's old song, because we are poets, not only crackers -->



</center></TD><td></td>



</TR>



<TR>



<td VALIGN= "MIDDLE" bgcolor="#C6E7C6"><font color=blue><center>



Rating</FONT></FONT></center>



</TD>



<td VALIGN = "MIDDLE" bgcolor="#C6E7C6"><font color=blue><center>



<!-- CHOOSE A RATING (may be changed) -->



( )<B>Beginner</B> ( )<B>Intermediate</B> ( )<B>Advanced</B> ( )<B>Expert</B></FONT>



</center></td>



<td></td>



</tr>



</table>



<!-- END HEAD  -->



<bR>



<!-- CORPUS  -->







<!-- CHOOSE A COMMENT (may be changed)  -->



When cracking a plentitude of targets all obstructed in the same fashion,

it's useful to find a common link.  This essay finds the common link in 150-or-so

tools within the MKS Toolkit, and offers a easy solution to the problem without

having to modify all the individual tools.



<hR>



<center>



   <FONT SIZE="+2">



<!-- CHOOSE A TITLE (wont probably be changed) -->



MKS Toolkit revisited

   </FONT><BR>



   <FONT SIZE="+2">



<!-- CHOOSE A SUBTITLE (wont proabbly be changed) -->

continuing drlan's work



   </FONT><BR>



   <FONT COLOR="0B7FC1">



<!-- REPEAT YOUR CHOSEN HANDLE HERE -->Written by 



bb



   </FONT>



</center><br><br>







<!-- INTRO STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Introduction</fonT>



</fonT></center></td></tr></table>



Well, drlan seems to have already done this, but I didn't like the method.  He 

went about cracking each of over a hundred executables to ignore the date check 

and the nag.  I'm a lazy sonofabitch, that sounds like too much work for me.  He 

had requested at the end of his essay for someone to look into making a generic 

patcher for all the EXEs. 

I'll go about doing this a different way, I think (I hope) a somewhat more 

"elegant" and "just" crack.  The goal here is: find a way to crack all 150 

executables without having to change them all.



<br><br>







<!-- TOOLS STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Tools required</fonT>



</fonT></center></td></tr></table>



<A HREF="javascript:if(confirm('http://www.cs.virginia.edu/~lcc-win32/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.cs.virginia.edu/~lcc-win32/'" tppabs="http://www.cs.virginia.edu/~lcc-win32/">LCC</A><br>

<A HREF="javascript:if(confirm('http://www.fortunecity.com/victorian/brambles/38/hiew566.zip  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.fortunecity.com/victorian/brambles/38/hiew566.zip'" tppabs="http://www.fortunecity.com/victorian/brambles/38/hiew566.zip">HIEW</A><br>



<br><br>



<!-- TARGET URL STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Target's URL/FTP</fonT>



</fonT></center></td></tr></table>



<!-- DON'T FORGET TO PASTE HERE THE URL/FTP OF YOUR TARGET(S) -->



<A HREF="javascript:if(confirm('ftp://ftp.mks.com/pub/demo/tk/6.1/tk61td_i.exe  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='ftp://ftp.mks.com/pub/demo/tk/6.1/tk61td_i.exe'" tppabs="ftp://ftp.mks.com/pub/demo/tk/6.1/tk61td_i.exe">MKS Toolkit 6.1 (for Intel platforms)</A>



<br><br>



<!-- PROGRAM HISTORY STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Program History</fonT>



</fonT></center></td></tr></table>



<!-- PASTE HERE YOUR TARGET'S HISTORY (if any) -->



For more information, feel free to read drlan's <A HREF="lan003.htm" tppabs="http://www.anticrack.de/fravia/lan003.htm">essay</A>.



<br><br>







<!-- REAL ESSAY  STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Essay</fonT></fonT>



</center></td></tr></table>



<!-- PASTE HERE THE TEXT OF YOUR ESSAY



     THIS IS OF COURSE THE MOST IMPORTANT PART



     PLEASE CHECK THE MARGINS WHEN YOU ARE FINISHED! 



     SHOULD NOT BLAST NETSCAPE MARGINS OUT! HAVE A LOOK INSIDE



     YOUR OWN BROWSER WHEN YOU HAVE FINISHED!  -->



So let's start with what we already know from Drlan's essay.  There's a 30-day 

time limit and a nag screen.  Each program individually checks for the 30-day 

time limit, and each calls a CreateProcess to run MKSDEMO.EXE, which contains 

the nag.  Well, the nag will be pretty simple to get rid of, then.  Just 

re-write MKSDEMO.EXE to exit silently, right?

<P>

Well, not quite.  We also need to fool the caller a bit.  Let's take a look at 

that EnumWindows call that Drlan mentions.  For our purposes, it's important.  

(I'm using the VIW.EXE as our little test proggie.)

<P>

Inside the callback function of the EnumWindows, we have:

<P><PRE>

00017747: 8B7508                       mov    esi,[ebp][00008]

0001774A: 6AEB                         push   0EB

0001774C: 56                           push   esi

0001774D: FF15F8B64300                 call   GetWindowLongA ;USER32.dll

00017753: 3DEBED0900                   cmp    eax,00009EDEB

00017758: 7533                         jne   .00001778D   ---------- (1)

0001775A: 8D459C                       lea    eax,[ebp][-0064]

0001775D: 6A64                         push   064

0001775F: 50                           push   eax

00017760: 56                           push   esi

00017761: FF1538B84300                 call   GetWindowTextA ;USER32.dll

00017767: 8D4D9C                       lea    ecx,[ebp][-0064]

0001776A: 68BCEB4200                   push   00042EBBC ; "MKS Toolkit Demo"

0001776F: 51                           push   ecx

00017770: E8BB540000                   call  .00001CC30   ---------- (2)

00017775: 83C408                       add    esp,008

00017778: 85C0                         test   eax,eax

0001777A: 7511                         jne   .00001778D   ---------- (3)

</PRE>

<P>

Ok, we start with a GetWindowLong(arg_8, 0xeb).  The 0eb is most probably for 

the USERDATA. (check your header files if you're unsure..)  That would mean the 

CMP right before jmp#1 is a magic number that our window needs to have in it's 

userdata.  Once it passes that, we have a GetWindowText, which will pull our the 

window title into the buffer at ebp-64. That buffer, along with an argument @ 

42eBBc which just so happens to be the text "MKS Toolkit Demo", gets passed to 

call#2, so we can guess that's the strcmp.

<P>

So we've got to fool this guy with two things: our userdata section has to have 

the magic number 0x09edeb in it, and our window needs to be called "MKS Toolkit 

Demo".  Right on, let's write some code.

<P>

I'm using LCC, so some particulars apply differently to the compiler that you 

may choose.  I've got code that looks like:

<P>

<PRE>

#include &lt;win.h&gt;

main()

{

HWND hwnd;



hwnd=CreateWindow(

"STATIC" /* lpClassName */,

"MKS Toolkit Demo" /* lpWindowName */,

WS_DISABLED|WS_POPUP /* dwStyle */,

0 /* x */,

0 /* y */,

0 /* nWidth */,

0 /* nHeight */,

NULL /* hWndParent */,

NULL /* hMenu */,

NULL /* hInstance */,

0 /* lParam */ );



if (hwnd==NULL) {

  printf("no hwnd\n");

  exit(-1);

  }

SetWindowLong(hwnd,GWL_USERDATA,0x0009edeb);

SetWindowText(hwnd,"MKS Toolkit Demo");

Sleep(1000);

exit(0);

}

</PRE>



We create a window of no size, set the appropriate magic number and window 

text, then sleep for a short time, allowing our MKS executable to find us and 

bypass the evil message about being unable to start MKSDEMO.EXE... Compile 

this and link it with "-subsystem windows", replace the old MKSDEMO.EXE, and 

you've got no more nag.  Now let's move on to the time limit.

<P>

What do we have here?  Well, we've got a registry value in HKEY_LOCAL_MACHINE 

called SOFTWARE\Mortice Kern Systems\Toolkit\DemoVersion\DemoNumber which 

contains some number that represents the software install date, and then we've 

got another routine that comes along with a GetSystemTime and produces a similar 

number.  A comparison between these two numbers is done, and if it just so 

happens to differ beyond 0x278d00, or thirty days, the executable refuses to 

work.

<P>

My first thought was to hook the RegQueryValueEx API function to check if we're 

looking for that registry key, and if we are, do a GetSystemTime and return the 

appropriate juju.  That would probably work, though it would mean we'd need some 

sort of setup program for MKS to initialize the hook, and that just seems 

sloppy.

<P>

But then it occurred to me, since every executable is calling MKSDEMO, why can't 

we just have MKSDEMO update the key to the current time everytime a MKS tool is 

run?  After I stopped giggling (for some reason, I found this intensely funny), 

I realized that this was justice preserved.  MKS went through all this trouble 

to make it hard on us, and here we are using the mechanism of their own 

obstructionist tactics against them.

<P>

So our object now is to figure out how the number in the registry key is 

developed from GetSystemTime, and then to put that code into our own MKSDEMO.C.  

Our install time in DemoNumber will get updated to the current time and our 

30-day trial will consistently renew itself whenever we run an MKS tool.

<P>

At 4175e0 we have our call to RegQueryValueEx, and there's a call to 423420 

shortly thereafter, which has our GetSystemTime in it.  The function at 423420 

returns the number we want in eax, so we've got to reverse this routine.  We 

need to remember the SYSTEMTIME structure, so follow along. (In this code, the 

WORDs of the structure get shoved into the DWORDs of the registers.  Many times 

the WORD in the high part of the DWORD gets masked out, sometimes it doesn't; 

the high WORD never matters, though, so I'm ignoring it in the comments.)

<P><PRE>

typedef struct _SYSTEMTIME {

    WORD wYear; 	// 0x10

    WORD wMonth;	// 0x0e

    WORD wDayOfWeek; 	// 0x0c

    WORD wDay; 		// 0x0a

    WORD wHour; 	// 0x08

    WORD wMinute; 	// 0x06

    WORD wSecond; 	// 0x04

    WORD wMilliseconds; // 0x02

} SYSTEMTIME;

</PRE><P>

The fairly long code snippet looks like:

<P><PRE>

00023420: 55                           push   ebp

00023421: 8BEC                         mov    ebp,esp

00023423: 83EC10                       sub    esp,010

00023426: 53                           push   ebx

00023427: 56                           push   esi ; save regs

00023428: 8D45F0                       lea    eax,[ebp][-0010]

0002342B: 57                           push   edi ; save edi

0002342C: 50                           push   eax

0002342D: FF1590B64300                 call   GetSystemTime ; ebp-10=Systemtime

00023433: 8B5DF2                       mov    ebx,[ebp][-000E] ; ebx=wMonth

00023436: 8B45F0                       mov    eax,[ebp][-0010] ; eax=wYear

00023439: 8BCB                         mov    ecx,ebx

0002343B: 8B55F6                       mov    edx,[ebp][-000A] ; edx=wDay

0002343E: 81E1FFFF0000                 and    ecx,00000FFFF

00023444: 4A                           dec    edx ; wDay--

; the table in 42f73e is

;   int mon2day[14]={ 0x0, 0x0, 0x1f, 0x3b, 0x5a, 0x78, 0x97, 0xb5,

;                     0xd4, 0xf3, 0x111, 0x130, 0x14e, 0x16d };

; which, given a month, gives us the number of days for each month since Jan 01

00023445: 668B344D3EF74200             mov    si,[00042F73E][ecx]*2 ; si=mon2day[ecx]

0002344D: 8D8844F8FFFF                 lea    ecx,[eax][0FFFFF844] ;ecx=edi-1980

00023453: 8BF9                         mov    edi,ecx ; edi=wYear-1980

00023455: 6603F2                       add    si,dx ; si += wDay

; si now = the number of days into the year from Jan 01, discounting the leap year

; so we should expect a leap calculation now

00023458: 81E7FFFF0000                 and    edi,00000FFFF

0002345E: 8BC7                         mov    eax,edi ; eax=wYear-1980

00023460: 99                           cdq ; edx=0, (usually a precursor to a modulo?)

00023461: 33C2                         xor    eax,edx

00023463: 2BC2                         sub    eax,edx

00023465: 83E003                       and    eax,003 ; eax = wYear % 3

00023468: 33C2                         xor    eax,edx

0002346A: 2BC2                         sub    eax,edx

0002346C: 7507                         jne   .000023475 ; if we're not in a leap year, jump

0002346E: 6683FB02                     cmp    bx,002 ; if we're not past February yet,

00023472: 7601                         jbe   .000023475 ; jump

00023474: 46                           inc    esi ; add a day

; our leap year calculation is done

00023475: 8D14C9                       lea    edx,[ecx][ecx]*8 ; edx=9*(wYear-1980)

00023478: 8D4703                       lea    eax,[edi][00003] ; eax=(wYear-1980)+3 (+3?)

0002347B: 8D0CD1                       lea    ecx,[ecx][edx]*8 ; ecx=73*(wYear-1980)

; 73 is an important number, 73 * 5 = 365, we should see that nearby

0002347E: 99                           cdq ; edx =0

0002347F: 8BD9                         mov    ebx,ecx

00023481: 83E203                       and    edx,003

00023484: 03DE                         add    ebx,esi ; ebx=(73(wYear-1980)+#days)

00023486: 03C2                         add    eax,edx 

00023488: C1F802                       sar    eax,002 ; eax=(wYear+3)/4

; this eax will be used to calculate how many leap days have past

0002348B: 8D0C8B                       lea    ecx,[ebx][ecx]*4 ; ecx=73*5*wYear+si=365wYear+si

; Here's our 365 days a year we're calculating since 1980

0002348E: 8D8408440E0000               lea    eax,[eax][ecx][000000E44]

; and here we have an adjustment for 3652 days, about 10 years-ish, 1970-ish instead of

; 1980, plus an adjustment for leap days past

; our #days calculation is now complete.

; we need #days * 24 hrs a day * 60 mins an hour * 60 seconds a min

; to compute it in seconds.. We'll see it here.

00023495: 25FFFF0000                   and    eax,00000FFFF

0002349A: 8D1440                       lea    edx,[eax][eax]*2 ; edx=3*#days

0002349D: 8B45F8                       mov    eax,[ebp][-0008] ; eax=whour

000234A0: 25FFFF0000                   and    eax,00000FFFF

000234A5: 8D04D0                       lea    eax,[eax][edx]*8 ; edx=8*3*#days+wHour

; 24 hrs in a day + wHour here, gives us eax = total # of hours so far since begin date.

000234A8: 8B55FA                       mov    edx,[ebp][-0006] ; edx=wMinute

000234AB: 8BC8                         mov    ecx,eax

000234AD: 81E2FFFF0000                 and    edx,00000FFFF

000234B3: C1E104                       shl    ecx,004 ; ecx=totalhrs*16

000234B6: 2BC8                         sub    ecx,eax ; make that totalhrs*15

000234B8: 8D048A                       lea    eax,[edx][ecx]*4 ; eax=15*totalhrs*4+wMinute

; 60 mins per hour + minutes, one last * 60 and we should be done.

000234BB: 8B55FC                       mov    edx,[ebp][-0004] ; edx=wSecond

000234BE: 8BC8                         mov    ecx,eax

000234C0: 81E2FFFF0000                 and    edx,00000FFFF

000234C6: C1E104                       shl    ecx,004 ; * 16

000234C9: 2BC8                         sub    ecx,eax ; * 15

000234CB: 8D048A                       lea    eax,[edx][ecx]*4 ; 15*4*totalsecs+wSecond

; eax = the # of seconds past since some target date.

000234CE: 8B4D08                       mov    ecx,[ebp][00008]

; and finally, if we've got arg to put this in, put it there, otherwise we'll drop it in eax

000234D1: 85C9                         test   ecx,ecx

000234D3: 7402                         je    .0000234D7

000234D5: 8901                         mov    [ecx],eax

000234D7: 5F                           pop    edi

000234D8: 5E                           pop    esi

000234D9: 5B                           pop    ebx

000234DA: 8BE5                         mov    esp,ebp

000234DC: 5D                           pop    ebp

000234DD: C3                           retn

</PRE><P>

Not bad, certainly easier than some serial # routines.  We can simplify this a bit

in C:

<P><PRE>

GetSystemTime(&st);

adddays=mon2day[st.wMonth]+st.wDay-1;

if ( ! (st.wYear-1980)%4 )

  if (st.wMonth>2)

    adddays++;



yeardays=st.wYear-1980;

yeardays*=73;

yeardays=(yeardays*4)+(yeardays+adddays);



leapdays=(st.wYear-1980+3)/4;

yeardays+=leapdays;

yeardays+=3652;



mytime = st.wSecond + (st.wMinute*60) + (st.wHour*60*60) + (yeardays*60*60*24);

</PRE><P>

What's curious here is the adjustments of 3,652 days. This calculation 

starts with Jan 01, 1980, but then instead gives us 10 years extra.  

The routine actually calculates the number of UTC seconds since Jan 01, 1970,

but the programmer chose to calculate the date from 1980 and then add in

the 10 extra years.  Doubtless we'll never figure out why, but who cares?

It's beat, and that's all that matters.

<P>

Add this into our MKSDEMO.C program, along with an appropriate registry change, 

and we're using MKS toolkit, nagless and forever.

<P>

<PRE>

#include &lt;win.h&gt;

main()

{

HWND hwnd;

SYSTEMTIME st;

PHKEY keyhand;

unsigned long mytime;

int mon2day[14]={ 0x0, 0x0, 0x1f, 0x3b, 0x5a, 0x78, 0x97, 0xb5,

                  0xd4, 0xf3, 0x111, 0x130, 0x14e, 0x16d };



hwnd=CreateWindow("STATIC", "MKS Toolkit Demo", WS_DISABLED|WS_POPUP, 0, 0, 0, 0,

                  NULL, NULL, NULL, NULL, 0);

SetWindowLong(hwnd,GWL_USERDATA,0x0009edeb);

SetWindowText(hwnd,"MKS Toolkit Demo");



GetSystemTime(&st);

adddays=mon2day[st.wMonth]+st.wDay-1;

if ( ! (st.wYear-1980)%4 )

  if (st.wMonth>2)

    adddays++;



yeardays=st.wYear-1980;

yeardays*=73;

yeardays=(yeardays*4)+(yeardays+adddays);



leapdays=(st.wYear-1980+3)/4;

yeardays+=leapdays;

yeardays+=3652;



mytime = st.wSecond + (st.wMinute*60) + (st.wHour*60*60) + (yeardays*60*60*24);



RegOpenKeyEx(HKEY_LOCAL_MACHINE,"SOFTWARE\\Mortice Kern Systems\\Toolkit\\DemoVersion", 

             0, KEY_WRITE, &amp;keyhand);

RegSetValueEx(keyhand,"DemoNumber",0,REG_DWORD,&amp;mytime,sizeof(DWORD));



Sleep(1000);

exit(0);

}

</PRE>

<br><br>









<!-- OB DUH STARTS HERE -->



<TABLE CELLPADDING="1" CELLSPACING="2" BORDER="1" WIDTH= "100%"  HEIGHT="22" >



<tr><td bgcolor="#C6E7C6"><center><font size=+2><font color=blue>Ob Duh</fonT></fonT>



</center></td></tr></table>



 <center>



   <i>I wont even bother explaining you 



   that you should BUY this target program if you intend to use it for a longer 



   period than the allowed one. Should you want 



   to STEAL this software instead, you don't need to crack its protection 



   scheme at all: you'll 



   find it on most Warez sites, complete and already regged, farewell.</i>



</center>







<!-- WAY OUT STARTS HERE -->



<hr>



<center><i>You are deep inside fravia's page of reverse engineering,  



choose your way out:</i></center>



<br><center>



<!-- EITHER A NICE GIF LIKE THIS -->







<!-- 



<a href="project3.htm" tppabs="http://www.anticrack.de/fravia/project3.htm"><IMG SRC="project3.gif" tppabs="http://www.anticrack.de/fravia/project3.gif" 



ALT="projecT3" ALIGN=CENTER WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a>



<br>



<font color=gray>Back to project 3</FonT>



<br><bR>



-->







<!-- OR JUST A LINK LIKE THIS -->







<!--



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="project1.htm" tppabs="http://www.anticrack.de/fravia/project1.htm">Back to Your_chosen_project</A> 



<hr width=33%>



-->







<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="index.html" tppabs="http://www.anticrack.de/fravia/index.html">homepage</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="links.htm" tppabs="http://www.anticrack.de/fravia/links.htm">links</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms</A>







<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="student.htm" tppabs="http://www.anticrack.de/fravia/student.htm">students' essays</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy database</A>



<br>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="realicra.htm" tppabs="http://www.anticrack.de/fravia/realicra.htm">reality cracking</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="howtosea.htm" tppabs="http://www.anticrack.de/fravia/howtosea.htm">how to search</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="javascri.htm" tppabs="http://www.anticrack.de/fravia/javascri.htm">javascript wars</A>



<br>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm">anonymity academy</A> 



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut CGI-scripts</A>







<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia+</A>



<br>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN=BOTTOM WIDTH=13 HEIGHT=13 



BORDER=0 VSPACE=0 HSPACE=0><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">Is reverse engineering legal?</A>



</CENTER>



<hr>



<!-- THAT'S ALL, THANKS A LOT this will allow automated retrieval -->



</BODY>



</HTML>