<HTML>

<HEAD>

  <TITLE>How to Crack vb5</TITLE>

</HEAD>

<BODY BGCOLOR="#C0C0C0" TEXT="#001010" VLINK="#405040">

<CENTER><FONT size="+3"><B>Happy VB5 cracking</B></FONT>

<BR>(Blackwindow's demise ~ IF visual basic THEN cracked at once)<BR>

<!--<a href="protecti.htm" tppabs="http://www.anticrack.de/fravia/protecti.htm"><IMG SRC="tough.gif" tppabs="http://www.anticrack.de/fravia/tough.gif" ALT="tough" ALIGN=BOTTOM WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a><br>-->

<H2><B>by intruder mexelite97</B></H2>

<H4>(19 December 1997)</H4>



<HR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">Courtesy of fravia's page 

of reverse engineering<HR>       

<I>Well, another very interesting contribution to our visual basic 

project! I find intruder mexelite97's project of 

preparing our own references for the Msvbvm50.dll 

functions VERY interesting, and I will send my contribution asap. In the 

mean time, once more, I would like to suggest to all those that are 

working on VisualBasic (or any other kind of software reversing, come 

to think of that :-) to have at least a try at Smartcheck, 

a fantastic Numega's cracking tool (see my relevant <A href="anonma2.htm" tppabs="http://www.anticrack.de/fravia/anonma2.htm">essay</A>), 

those of you that have not used it yet for cracking purposes 

will be quite surprised :-)<BR>One last thing: is there a lesson for shareware 

programmers? Yes, a quite interesting one:</I>

<CENTER><FONT color="green">IF</FONT> VISUAL BASIC <FONT color="green">THEN</FONT> CRACKED AT ONCE</FONT></CENTER>

<I>Therefore, DO NOT USE visual basic... or if you really think you must, 

at least prepare your protection schemes in assembly, so learn assembly, 

so forget Visual Basic... it's the devil (cracker) circle! :-)</I></CENTER>

<HR size="6">

<BR>First i would like to thanks fravia+, +gthorne, the_owl, niabi, razzi,

josephco and all of you guys that i can't remember now. This is my small

contribution for the war against our beloved bill and Micro$oft, i hope

you enjoy this tute.



<P>Tools needed:

<BR>-Softice (I'm using v3.2)

<BR>-Wdasm

<BR>-Hex editor

<BR>&nbsp;

<BR>Blackwindow&nbsp; v3.21



<P>Blackwidow is an off-line browser&nbsp; and I find it pretty kewl 

(get

it at Tucows or any other shareware archive), but has some limitations.

This is&nbsp; a VB5 proggie, the exe is about&nbsp; 400 kb and has lots

of calls to the the big, fat mama: Msvbvm50.dll.&nbsp;

<BR>First i will crack the _blackwidow.exe (no browser) and _bwds.exe 

(this

exe is called to download the selected files), since this program as two

more exe files (the others, blackwidow.exe and bwds.exe, allow you to 

browse

through the downloaded files.

<BR>Now run the proggie a couple of times and check the protection type,

have u checked?

<BR>Ok there is a stupid nag window that tells you how many days you have

left to evaluate (&quot;You have XX days left&#133;&quot;)**, and you&nbsp; can 

download

a maximum of 50 files each time (this really pisses me off), why can't

they let us evaluate the full working proggie, grrrrrrrrr, but we have

the possibility to register the proggie if we want to, it's a S/N 

protection.

<BR>Now change the date, say one month forward, now run the proggie 

again,

can u see the nag that tells u that your evaluation is over (&quot;Your 

evaluation

period has expired&#133;..&quot;)***? And if u try to explore any site , the same

nag will pop up and ask you to register.

<BR>How do we crack this one?

<BR>You can use razzi's techniques of&nbsp; hmemcpy and 

MultiBytetoWidechar

but you will get in&nbsp; some huge encryption and checksum&nbsp; 

routines,

damn there must be another way!!!

<BR>I lost a couple of days trying to crack the S/N and finally I 

decided

to try another approach.

<BR>I'll use a different approach, one that i've never seen in any essay. 

(For the moment, just remember,

that in vb4 proggies and vb5 as well, strings are in wide format).<BR>

Let's

crack! First thing is to get a disassembled list of _blackwidow.exe. 

Have

u got it? Good, let's go on. Can you see the huge amount of calls? (damn

VB programmers). 

<BR>Now check&nbsp; the imports &#133;hmm&#133;interesting name 

rtcMsgBox,

__vbalenBstr, &#133;.etc., since we are going to use softice don't forget to

load Msvbvm50.dll exports into softice.

<BR>Ok now run blackwidow, can u see

the nag? now we will set a breakpoint on blackwidow code, press 

Ctrl+D&nbsp;

to get into softice and type bpx&nbsp; __vbalenBstr (you can try any bpx

 you fancy on

other functions, but this one will work for sure), now Ctrl+D to get out

of softice and just try to register the proggie (just press the OK 

button)

and Softice will pop up at the beginning of __vbalenBstr, press F11 to

get out of the call and you will be inside blackwidow code.<BR>

Now here's

the approach, we are going to search for the message in the nag, 

remember&nbsp;

- &quot;You have XX days left&#133;&quot;, but don't forget that the string is in wide

format. So we will search for&nbsp; &quot;You have&#133;&quot;

<BR>&nbsp;

<BR>&nbsp;

<CENTER><TABLE COLS="2" WIDTH="100" HEIGHT="100">

<TR>

<TD>Character&nbsp;</TD>



<TD>ASCII</TD>

</TR>



<TR ALIGN="CENTER">

<TD>Y</TD>



<TD>59</TD>

</TR>



<TR ALIGN="CENTER">

<TD>o</TD>



<TD>6f</TD>

</TR>



<TR ALIGN="CENTER">

<TD>u</TD>



<TD>75</TD>

</TR>



<TR ALIGN="CENTER">

<TD>(space)</TD>



<TD>20</TD>

</TR>



<TR ALIGN="CENTER">

<TD>h</TD>



<TD>68</TD>

</TR>



<TR ALIGN="CENTER">

<TD>a</TD>



<TD>61</TD>

</TR>



<TR ALIGN="CENTER">

<TD>v</TD>



<TD>76</TD>

</TR>



<TR ALIGN="CENTER">

<TD>e</TD>



<TD>65</TD>

</TR>

</TABLE></CENTER>

Let's search.....in softice type -&nbsp; <FONT SIZE="+1">s 0 lffffffff 59

00 6f 00 75 00 20 00 68 00 61 00 76 00 65</FONT>



<P>softice will probably find some memory locations with this string but

only one will be inside blackwidow data, check the line that separates

the data window from the window above if something like this appears:



<P>----------_BLACKWIDOW!.text+1010C----------byte-----------



<P>then you found your string!!!!!!

<BR>Now just write down them mem location, mine is&nbsp; 411C0C, now 

disable

the breakpoint you set and go to your disassembled list and search for

'411C0C' (ATTENTION: ignore the code line with the offset '411C0C' we 

are

looking for the code where data offset '411C0C' is used, not code 

offset)

.....there is only one place where this address is used, look at the 

code:



<P>* Referenced by a Jump at Address:0044486B(C)

<BR>|

<BR>:00444BCA 

680C1C4100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push 00411C0C&nbsp; ;&lt;----here 'You have % days left.....'

<BR>:00444BCF 

50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

push eax

<BR>&nbsp;



<P>Hmm...interesting isn't it? Let's go on now we will search for the 

string

that appears in the message when the evaluation period is over. We will

use the same method we used to find the first string, enable the 

breakpoint

and repeat the same procedure, when you're inside blackwidow code just

search for the string in the nag. So we will search for&nbsp; &quot;Your 

evaluation

period has now expired&#133;&quot;

<BR>&nbsp;

<BR>&nbsp;

<CENTER><TABLE COLS="2" WIDTH="100">

<TR>

<TD ALIGN="CENTER">Character</TD>



<TD>ASCII</TD>

</TR>



<TR ALIGN="CENTER">

<TD>Y</TD>



<TD>59</TD>

</TR>



<TR ALIGN="CENTER">

<TD>o</TD>



<TD>6f</TD>

</TR>



<TR ALIGN="CENTER">

<TD>u</TD>



<TD>75</TD>

</TR>



<TR ALIGN="CENTER">

<TD>r</TD>



<TD>72</TD>

</TR>



<TR ALIGN="CENTER">

<TD ALIGN="CENTER">(space)</TD>



<TD>20</TD>

</TR>



<TR ALIGN="CENTER">

<TD>e</TD>



<TD>65</TD>

</TR>



<TR ALIGN="CENTER">

<TD>v</TD>



<TD>76</TD>

</TR>



<TR ALIGN="CENTER">

<TD>a</TD>



<TD>61</TD>

</TR>



<TR ALIGN="CENTER">

<TD>l</TD>



<TD>6c</TD>

</TR>

</TABLE></CENTER>

&nbsp;

<BR>Let's search.....in softice type -&nbsp; <FONT SIZE="+1">s 0 lffffffff

59 00 6f 00 75 00 72 00 20 00 65 00 76&nbsp; 00 61 00 6c</FONT>



<P>search until you find the string we are looking for inside blackwidow

data, check the line that separates the data window from the window 

above.

Write down the adress and search for it inside the disassembled list, 

once again it will only appear once:

<PRE>

* Referenced by a Jump at Address:00444850(U) 

* Reference To: MSVBVM50.rtcGetTimer, Ord:0217h 

                                  | 

:00444858 FF1590444600   Call dword ptr [00464490] 

:0044485E A128E04500     mov eax, dword ptr [0045E028]   ;eax=days left 

:00444863 D91D30E04500   fstp dword ptr [0045E030]       ;doesn't matter 

:00444869 3BC3           cmp eax, ebx       ;cmp eax with ebx, ebx=0 

:0044486B 0F8F59030000   jg 00444BCA        ;jmp if any days left, this 

                                            ;jump will lead you to the nag 

                            

* Reference To: MSVBVM50.__vbaStrCopy, Ord:0000h 

                                  | 

:00444871 8B3DD0444600   mov edi, dword ptr [004644D0] 

:00444877 BAB81B4100     mov edx, 00411BB8            ;&lt;-----here 

:0044487C 8D4DEC         lea ecx, dword ptr [ebp-14] </PRE>

  

 We found the place where the program decides which nag should 

 pop up, now let's take a look of the code just before this, 

 this call to  rtcGetTimer: 

<PRE>

:0044471A 1BFF           sbb edi, edi 

:0044471C F7DF           neg edi 

:0044471E E8DD6A0100     call 0045B200             ;&lt;---<A NAME="checksum call"></A>what is this?? 

:00444723 33D2           xor edx, edx              ;edx=0 

:00444725 3DDABF0202     cmp eax, 0202BFDA         ;cmp eax with some checksum 

:0044472A 0F95C2         setne dl                  ;set dl=1 if not equal 

:0044472D 0BFA           or edi, edx                  

:0044472F 750D           jne 0044473E              ;jmp unregistered user--

:00444731 66391D78E04500 cmp word ptr [0045E078], bx            

:00444738 0F8403040000   je 00444B41                     



* Referenced by a Jump at Address:0044472F(C)                           

:0044473E 833D28E0450001 cmp dword ptr [0045E028], 1 ;compare days left **

:00444745 0F8C07010000   jl 00444852                 ;jmp if 0 days left 

:0044474B 8D4598         lea eax, dword ptr [ebp-68] 

:0044474E 50             push eax 



* Reference To: MSVBVM50.rtcGetDateVar, Ord:0262h 

                                  | 

:0044474F FF1508454600  Call dword ptr [00464508] 



* Referenced by a Jump at Address:00444745(C) 

* Reference To: MSVBVM50.__vbaStrMove, Ord:0000h 

                                  | 

:00444852 8B3544454600  mov esi, dword ptr [00464544]; &lt;- <A NAME="here, if 0  days"></A>here, if 0 days left 



* Referenced by a Jump at Address:00444850(U) 

* Reference To: MSVBVM50.rtcGetTimer, Ord:0217h 

                                  | 

:00444858 FF1590444600  Call dword ptr [00464490] 

:0044485E A128E04500    mov eax, dword ptr [0045E028]   ;eax=days left 

:00444863 D91D30E04500  fstp dword ptr [0045E030]       ;doesn't matter 

:00444869 3BC3          cmp eax, ebx     ;cmp eax with ebx, ebx=0 

:0044486B 0F8F59030000  jg 00444BCA      ;jmp if any days left, this jump 

                                         ;will lead you to the nag 



* Reference To: MSVBVM50.__vbaStrCopy, Ord:0000h 

                                  | 

:00444871 8B3DD0444600  mov edi, dword ptr [004644D0] 

:00444877 BAB81B4100    mov edx, 00411BB8 ;&lt;-----&quot;Your evaluation period...&quot; 

:0044487C 8D4DEC        lea ecx, dword ptr [ebp-14] 

...

* Referenced by a Jump at Address:0044486B(C) 

| 

:00444BCA 680C1C4100    push 00411C0C     ;&lt;---<A NAME="here 'You have % days left.....'"></A>here 'You have % days left...' 

:00444BCF 50            push eax 

</PRE>









<P>As you can see after this <A HREF="#checksum call">strange call</A>

the value in EAX is compared and DL is set to 1 if eax different of 

0202BFDA

<BR>if you are a registered user just go on, else check how many days 

are

left , there are 2 checks for this, the first one will check if you can

still use blackwidow and set it up, and the second one will decide which

nag should pop up. The mem location that stores the number of days left

(in my computer) is 45E028. So let's crack.... permanently, remember the

strange call just before the registered user check? Now check that 

address

(45b200 in my computer) and you'll see 9 calls to this routine, now 

write

down those 9 addresses and check each one of these 9 locations. Can u 

see

that after any of these call eax is compared with 202BFDA and that after

that there is a 'setne dl'.<BR>Look!

<FONT color="purple" face="courier">

<P>:0044471E 

E8DD6A0100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

call 0045B200

<BR>:00444723 

33D2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

xor edx, edx

<BR>:00444725 

3DDABF0202&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

cmp eax, 0202BFDA

<BR>:0044472A 

0F95C2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

setne dl

</FONT>



<P>so to permanently crack this one you'll just need to change all 

'setne

&lt;reg&gt;' that appear after the call to 'sete &lt;reg&gt;'.

<BR>The 'sete &lt;reg&gt;' opcode is OF94XX&quot;. It's done. Now let's check 

_bwds.exe,

this is the executable that _blackwidow.exe uses to download the files,

and this exe also checks for the registered user (if you aren't a 

registered

user you'll only be able to download a maximum of 50 files) and uses the

same routine to do it, so just search for the value that is 

compared&nbsp;

with eax after each call (0202BFDA), open your eax editor and search for

'DABF0202' and you will find two occurrences now just change the 0F95 

bytes

to 0F94. And you will be able to download as many files as you want.

<BR>It's CRACKED, now just register with some fake serial.

<BR>&nbsp;

<BR>&nbsp;

<BR>I've tried this 'live string search' approach in some others VB5 

proggies

and worked fine. Currently i'm doing a reference for Msvbvm50.dll 

functions

(i'll try to release it in a couple of weeks) so if you have reversed 

any

of those i would apreciate you could send it to me, to 

devils_cave@hotmail.com.

</PRE>



<HR>

<FONT color="green">(c) <FONT color="#5500AA">intruder mexelite97</FONT> All rights reversed</FONT>

<HR ALIGN="CENTER" WIDTH="100%" SIZE="3">

<CENTER><I>You are deep inside fravia's page of reverse engineering,  

choose your way out:</I></CENTER>

<BR><CENTER>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="project8.htm" tppabs="http://www.anticrack.de/fravia/project8.htm">Back to Project 8</A> 

           <HR width="33%">



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="index.html" tppabs="http://www.anticrack.de/fravia/index.html">homepage</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="links.htm" tppabs="http://www.anticrack.de/fravia/links.htm">links</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm">anonymity</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm">+ORC</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="student.htm" tppabs="http://www.anticrack.de/fravia/student.htm">students' essays</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="academy.htm" tppabs="http://www.anticrack.de/fravia/academy.htm">academy database</A><BR>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm">tools</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm">cocktails</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="ideale.htm" tppabs="http://www.anticrack.de/fravia/ideale.htm">antismut CGI-scripts</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm">search_forms</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm">mail_fravia</A><BR>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0"><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm">Is reverse engineering legal?</A></CENTER>

<CENTER><HR ALIGN="CENTER" WIDTH="100%" SIZE="2"></CENTER>

</BODY>

</HTML>