<html>  <HTML>

<HEAD>

<TITLE>pro_rcg</TITLE>

</HEAD>

<BODY BGCOLOR="#C0C0C0" TEXT="#001010" VLINK="#405040">

<CENTER><H2>How to protect better<BR>

(FIRST PHASE of this new section)</H2><H4><I>by +Rcg, May 1997</I></H4>

<BR>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13">Courtesy of Fravia's page 

of reverse engineering

<BR>~<BR>





<PRE><FONT color="purple"><H2>

How to protect better.

</FONT></H2></CENTER>





1. Why we must do this?



	We must learn a lot of new ways to crack and to protect, 

(protection=cracking+programming...  therefore a more &quot;complete&quot; 

work)because as soon Micro$oft &quot;kills&quot; all the few remaining big 

software companies, they will begin to &quot;sell&quot; their software.



	Or do you really think they will continue all the time

giving their software for free? 

	Do you really think Money 97 has a toy protection because

they don't know how to protect it better?

	This 90 day trial demo is just a &quot;legal&quot; way to defeat all 

the others Software developers.

	What is more ILEGAL? To sell something at a price lowest than

its developing costs or to teach to crack? And what about selling 

at zero price? 



	When Internet becomes really in a &quot;HighRoad&quot; and you will be able

to download multimegabytes files in few seconds, then the trial

formula will suddendly disappear, and you will pay for every byte and 

for every use of the Micro$oft WordProcesor, the Micro$oft SpreadSheet, 

you name it, just because in the late '90 they legally &quot;sold&quot; their 

software for nothing (defeating all the others software companies).



	So we must be prepared for this (or something worse), I personally

think that in a few years, the whole world will be using Windows NT and 

nothing else, indipendently from the advantages and disadvantages of this 

particular OS.

	This OS is more protected, just think how many undocumented

funtions are hidden inside it. 

	The MS-DOS &quot;little unix&quot; entry will be definitely erased (and or banned) 

and programmers will be forced to use Micro$oft functions. We will be at 

their feet.



	But... here we are (little Frodos)... with the advices of our

master, the &quot;Red&quot; Wizard, we will wage the battle against the 

black shadows (and perhaps help in makuing this world a little better).



	Remember: there are millions of 'zombies' in the world, it's time

to wake some of them up. Statistically, in my country, people watch TV for

over 3 hours a day....OH!!! MAMMA MIA!!! and I believe that in the States 

things are even worse than that.







2. Ok, ok, you have convinced me, but how can I begin?



	Simple: download the first's three examples, and learn from

them all you can, and then, try your own protections, use your mind, 

don¥t ever be a zombie anymore, spend your useless TV hours developing 

your own protections schemes... it's fun and at the same time you will 

be preventing your premature cerebral deterioration (known as Alzheimer's 

disease) did you know that the TV-drooling zombies have a bigger probability 

to catch it?), and then send them to us. 

	We will publish the best new schemes created by you, thus, more and 

more people will have at least some weapons to fight against our common 

enemy. This is the reason we ask EXSPECIALLY shareware programmers to help 

in this section... strange isn't it? Crackers and Shareware programmers 

fighting together... when the crocodile comes, cats and dogs form alliances.

	Read first the next guidelines. I know these first three examples

are not the 'panacea' in programing neither in protections, but I think

it's a good, and easy, framework for Newbyes. 



	Tips:

		Example 1: A simple register code scheme.

		Example 2: Like 1 plus a NagScreen 

				(find the trapdoor inside it)

		Example 3: Just like 2 but a little WinIce 

			    hostile :-( (You are able to recover the

		  	    system, use the stack to find the real

			    return and restore the stack).

	

	REMEMBER:



	Don¥t send us exe files, because we will never execute them. We only 

want the sources, we will study them, and then we will compile them, and 

then publish them for the HCUkers.



	Of course, if you are a little sceptic about this, you can as

well wait 2 weeks, and download only the source with its solution. 

Less brain work and less fun, though.





3. What are the usual &quot;approach&quot; metods little crackers use?



	Basically (at least until master +ORC teach us other 

methods :-) we use two: &quot;Dead listing&quot; and &quot;Debugger tracing&quot;.





4. How can we defeat people following these approaches?



	4.1. Debugger tracing, is &quot;a priori&quot; the easiest to avoid, just 

use the little tricks used in order to know if SoftIce (or any other tsr 

debugger) dwells in memory. Read the splendid docoument &quot;WinIce Galore&quot; by 

Civetta.



	Just look at this:

	.

	.

	lea	esi,GetDlgItemTextA

	call	CheckIce

	cmp	eax,&quot;ICFI&quot;		;Is Sice Fired?

	je	Bad_Guy_Crash_system

	call	esi

	.

	.



CheckIce:       

       push    esi

       push    ds

       push    cs

       pop     ds    	      ;Now DS=CS

       mov     esi,[esi+2]	;Get dll function jmp address		

       mov     esi,[esi]	;Get dll function real address

       mov     eax,[esi]	;Get first bytes of dll function

       and     eax,0FFh	;Use only first byte

       cmp     eax,0CCh	;bpxed?

       mov	   eax,&quot;ICFI&quot;

	 je      Ice_Fired

       xor     eax,eax

Ice_Fired:      

	 pop     ds			;Restore ds

       pop     esi

       ret

 

	We can use this simple routine just to know if the little

cracker has commanded a bpx at the next &quot;call dll_function&quot;, 

exiting (or crashing the system) if Softice is &quot;near&quot;.



	Another useful anti-debugger trick is:

	.

	.

	mov	al,0CCh

	mov	ecx,Routine_Length

	Call	Check_CC

Routine_To_Check:

	.

	.



Check_CC:

	mov	esi,[esp]	;Ret Address

	push	ds

	push	cs

	pop	ds

Do_More:	

	cmp	al,[esi+ecx]

	jne	Warning_WinIce_Is_Ahead_Crash_system

	loop	Do_More

	pop	ds

	ret	;Good Guy



Warning_WinIce_Is_Ahead_Crash_system:



	pop	cs	;This will crash your system inmediately

	ret

	

	What could we use this for?



	I.E. to check if actual routine has a &quot;bpx&quot; somewhere or

just to check the entire programm searching for a bpx.



	4.2 Once SoftIce is &quot;out of service&quot;, Dead listing can be

made more complicated just using indirect calls, like this:		

	

		call [Call_Table+4]



this table is in Data segment, so it can be encrypted or loaded at

any time from a file or from whatever hyding ground you can imagine.

	You could also use a lot of junk code, and you could &quot;play&quot; 

with your stack a lot, this will make the &quot;dead listing&quot; way 

horrible... well yes, that's more easy for a single shareware 

programmer that may be knows a little assembly than for a big 

stupid corporation, which HAS to have clear code in order to 

produce quickly, part work among many poor programmerslaves and

try to get a minimum of bugs out... nice sideeffect, isn't it? :-)





5. What is the best way to protect a program?



	5.1. Program encrypted (like some viruses) , we avoid totally 

Dead Listing and patching as long as the cracker does not find the

encryption routine/schema.

	5.2. Self-Modificable Code, look:



		push	eax

		push	ebx

		Call	Check_User_Entry_Code

		test	eax,eax

		je	Bad_Guy

		nop		;Here we will put the Good_Guy jmp

		nop		;it depents of many other calls	

		nop		;Who knows which?

		nop

		nop

		nop				

Bad_Guy:	Call	Crash_System

		



	5.3. Others methods, simply let your imagination fly!!!!





6. How to implement the techniques we have seen point 5?



	VxD. I know this is a big effort, but I'm sure we

will be able to program them in a few months, so we will take

again the control over the system (just like we did in Ms-Dos).

I'm breaking new ground here, therefore I will develop this

as soon as possible.





+rcg 1997



<BR>

</PRE>

<HR size="2">

Here we go, download, experiment and learn:<BR>

<A href="javascript:if(confirm('http://129.105.116.5/fravia/examples.zip  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://129.105.116.5/fravia/examples.zip'" tppabs="http://129.105.116.5/fravia/examples.zip">all examples</A><BR>



<BR>

<HR ALIGN="CENTER" WIDTH="100%" SIZE="3">

<CENTER><I>You are deep inside fravia's page of reverse engineering,  

choose your way out:</I></CENTER>

<BR><CENTER>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="tppmsgs/msgs0.htm#79" tppabs="http://www.anticrack.de/fravia/tppmsgs/msgs0.htm#79"> homepage</A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"> 

<A HREF="tppmsgs/msgs0.htm#53" tppabs="http://www.anticrack.de/fravia/tppmsgs/msgs0.htm#53"> links</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALT="red" ALIGN="BOTTOM" WIDTH="13" HEIGHT="13" BORDER="0" VSPACE="0" HSPACE="0">

<A HREF="noanon.htm" tppabs="http://www.anticrack.de/fravia/noanon.htm"> anonymity</A> 

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="orc.htm" tppabs="http://www.anticrack.de/fravia/orc.htm"> +ORC</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="tppmsgs/msgs0.htm#78" tppabs="http://www.anticrack.de/fravia/tppmsgs/msgs0.htm#78"> students' essays</A>

<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="tools.htm" tppabs="http://www.anticrack.de/fravia/tools.htm"> tools</A><IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="cocktail.htm" tppabs="http://www.anticrack.de/fravia/cocktail.htm"> cocktails</A><BR>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="searengi.htm" tppabs="http://www.anticrack.de/fravia/searengi.htm"> search_forms</A>



<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="info.htm" tppabs="http://www.anticrack.de/fravia/info.htm"> mailFraVia</A><BR>





<IMG SRC="bulletr.gif" tppabs="http://www.anticrack.de/fravia/bulletr.gif" ALIGN="BOTTOM" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="13" HEIGHT="13"><A HREF="legal.htm" tppabs="http://www.anticrack.de/fravia/legal.htm"> Is reverse engineering illegal?</A></CENTER>

<CENTER><HR ALIGN="CENTER" WIDTH="100%" SIZE="2"></CENTER>

</BODY>

</HTML>